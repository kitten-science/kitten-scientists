name: Nightly

on:
  schedule:
    - cron: "30 2 * * *"
  workflow_dispatch:
    inputs:
      move-tags:
        default: false
        description: Allow tags to be moved? Requires GitHub Release.
        required: false
        type: boolean
      publish-documentation:
        default: false
        description: Update the documentation website?
        required: false
        type: boolean
      publish-github-release:
        default: false
        description: Create a GitHub release?
        required: false
        type: boolean
      publish-npm:
        default: false
        description: Publish npm package?
        type: boolean
        required: false
      publish-oci:
        default: false
        description: Publish container?
        type: boolean
        required: false
      release-tag:
        default: nightly
        description: Floating pre-release tag to use.
        type: string
        required: true

concurrency:
  group: nightly
  cancel-in-progress: false

env:
  # renovate: datasource=node-version depName=node versioning=node
  NODE_VERSION: "22.15.1"

jobs:
  params:
    name: Determine configuration
    outputs:
      move-tags: ${{ github.event_name == 'workflow_dispatch' && inputs.move-tags || 'true' }}
      publish-documentation: ${{ github.event_name == 'workflow_dispatch' && inputs.publish-documentation || 'true' }}
      publish-github-release: ${{ github.event_name == 'workflow_dispatch' && inputs.publish-github-release || 'true' }}
      publish-npm: ${{ github.event_name == 'workflow_dispatch' && inputs.publish-npm || 'true' }}
      publish-oci: ${{ github.event_name == 'workflow_dispatch' && inputs.publish-oci || 'true' }}
      release-tag: ${{ github.event_name == 'workflow_dispatch' && inputs.release-tag || 'nightly' }}
      release-channel: nightly
    permissions:
      contents: none
    runs-on: ubuntu-24.04
    steps:
      - if: false
        name: Noop
        run: exit 0

  changelog:
    name: Changelog
    needs:
      - params
    outputs:
      has-changed: ${{ 0 < steps.changelog.outputs.major-total || 0 < steps.changelog.outputs.minor-total || 0 < steps.changelog.outputs.patch-total }}
      version: ${{ steps.changelog.outputs.version-nightly-extended }}
    permissions:
      contents: read
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          persist-credentials: false
          sparse-checkout: package.json
          sparse-checkout-cone-mode: false

      - id: version
        name: Extract current version
        run: echo "root-version=$(jq --raw-output '.version' package.json)" >> $GITHUB_OUTPUT

      - id: changelog
        name: Generate changelog
        uses: oliversalzburg/action-automatic-semantic-releases@85df1a5f81e6a18f5bb88eb495198b27399066dc # v2.0.0
        with:
          automatic-release-tag: ${{ needs.params.outputs.release-tag }}
          changelog-artifact: changelog.json
          dry-run: true
          publish: false
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          root-version: ${{ steps.version.outputs.root-version }}

      - name: Store changelog
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: changelog.json
          path: changelog.json

  skip:
    if: success() && needs.changelog.outputs.has-changed == 'false'
    name: Skip
    needs:
      - changelog
    runs-on: ubuntu-24.04
    steps:
      - name: Print skip reason
        run: echo "No behavior changes since the last nightly were detected."

  qa:
    if: success() && needs.changelog.outputs.has-changed
    name: ðŸ”¹ QA
    needs:
      - changelog
    uses: ./.github/workflows/qa.yml

  publish-devcontainer:
    if: success() && needs.params.outputs.publish-oci == 'true' && needs.changelog.outputs.has-changed == 'true'
    name: ðŸ”¹ Publish
    needs:
      - changelog
      - params
      - qa
    permissions:
      attestations: write
      contents: read
      id-token: write
      packages: write
      pages: write
      pull-requests: read
      security-events: write
    uses: oliversalzburg/workflows/.github/workflows/publish-oci.yml@main
    with:
      artifact-name: devcontainer-output
      containerfile: devcontainer/Containerfile
      dist-tag: ${{ needs.params.outputs.release-tag }}
      image-description: Kitten Science Development Container
      image-name: kitten-science/devcontainer
      image-tag: v${{ needs.changelog.outputs.version }}
      image-title: devcontainer
      push: ${{ needs.params.outputs.move-tags == 'true' }}
      with-sarif: false
      with-sbom: false

  publish-documentation:
    if: success() && needs.params.outputs.publish-documentation == 'true' && needs.changelog.outputs.has-changed == 'true'
    name: ðŸ”¹ Publish
    needs:
      - changelog
      - params
      - qa
    permissions:
      contents: read
      id-token: write
    uses: ./.github/workflows/publish-documentation.yml
    with:
      publish-url: https://next.kitten-science.com

  publish-npm:
    if: success() && needs.params.outputs.publish-npm == 'true' && needs.changelog.outputs.has-changed == 'true'
    name: ðŸ”¹ Publish
    needs:
      - changelog
      - params
      - qa
    permissions:
      contents: write
      id-token: write
      packages: write
      pages: write
      pull-requests: read
    secrets:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    uses: oliversalzburg/workflows/.github/workflows/frag-publish-npm.yml@main
    with:
      dist-tag: ${{ needs.params.outputs.release-tag }}
      version: ${{ needs.changelog.outputs.version }}

  nightly:
    if: |
      always()
      && contains(needs.*.result, 'success')
      && !contains(needs.*.result, 'failure')
      && needs.params.outputs.publish-github-release == 'true'
      && needs.changelog.outputs.has-changed == 'true'
    name: Nightly
    needs:
      - changelog
      - params
      - publish-devcontainer
      - publish-documentation
      - publish-npm
      - qa
    permissions:
      actions: write
      attestations: write
      contents: write
      id-token: write
      packages: write
      pull-requests: read
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          persist-credentials: false

      - name: Select Node.js version
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: https://registry.npmjs.org

      - name: Load cached dependencies
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node{{ env.NODE_VERSION }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node${{ env.NODE_VERSION }}

      - name: Build release
        env:
          RELEASE_CHANNEL: ${{ needs.params.outputs.release-channel }}
          RELEASE_VERSION: ${{ needs.changelog.outputs.version }}
        run: make

      - name: Download changelog
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4
        with:
          name: changelog.json

      - if: success() && needs.params.outputs.publish-github-release == 'true'
        name: Generate GitHub release
        uses: oliversalzburg/action-automatic-semantic-releases@85df1a5f81e6a18f5bb88eb495198b27399066dc # v2.0.0
        with:
          automatic-release-tag: ${{ needs.params.outputs.release-tag }}
          body-suffix: |

            ---
            - Release generated by <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}>
            ${{ needs.publish-documentation.outputs.publish-url && format('- Documentation published at <{0}>', needs.publish-documentation.outputs.publish-url) }}
            ${{ needs.publish-devcontainer.outputs.publish-url && format('- Devcontainer published at <{0}>', needs.publish-devcontainer.outputs.publish-url) }}
            ${{ needs.publish-npm.outputs.publish-url && format('- npm package published at <{0}>', needs.publish-npm.outputs.publish-url) }}
          changelog-artifact: changelog.json
          draft: false
          dry-run: ${{ needs.params.outputs.move-tags == 'false' }}
          files: output/*
          merge-similar: true
          prerelease: true
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          title: Nightly Build v${{ needs.changelog.outputs.version }}
          with-authors: false

  update-release-info:
    # The Release Info action uses GitHub releases as source of truth.
    # If we didn't publish a release, there is no need to update the information.
    if: success() && needs.params.outputs.publish-github-release == 'true' && needs.changelog.outputs.has-changed == 'true'
    name: ðŸ”¹ Publish
    needs:
      - params
      - nightly
    permissions:
      contents: read
      id-token: write
    uses: ./.github/workflows/publish-release-info.yml
