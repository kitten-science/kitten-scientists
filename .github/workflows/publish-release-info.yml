name: Publish

on:
  workflow_call:
  workflow_dispatch:

concurrency: release-info

env:
  # renovate: datasource=node-version depName=node versioning=node
  NODE_VERSION: "22.20.0"

jobs:
  release-info:
    name: Release Info
    permissions:
      contents: read
      id-token: write

    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Select Node.js version
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: ${{ inputs.registry-url }}

      - name: Load cached dependencies
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node{{ env.NODE_VERSION }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node${{ env.NODE_VERSION }}

      - name: Generate release information
        id: release-info
        uses: kitten-science/action-release-info@932dffa44cdf8c4efc9bf2de4363341d931bc73f # v1.0.4
        with:
          filename: release-info.json
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@00943011d9042930efac3dcd3a170e4273319bc8 # v5.1.0
        with:
          aws-region: eu-west-1
          role-to-assume: arn:aws:iam::022327457572:role/kitten-science-us0-maintainer
          role-session-name: GitHubActions

      - name: Grab Kitten Scientists Artifacts
        run: |
          curl --location --silent "${{ steps.release-info.outputs.dev-url-default }}" --output dev.js || true
          curl --location --silent "${{ steps.release-info.outputs.nightly-url-default }}" --output nightly.js || true
          curl --location --silent "${{ steps.release-info.outputs.stable-url-default }}" --output stable.js || true
          curl --location --silent "${{ steps.release-info.outputs.dev-url-minified }}" --output dev.min.js || true
          curl --location --silent "${{ steps.release-info.outputs.nightly-url-minified }}" --output nightly.min.js || true
          curl --location --silent "${{ steps.release-info.outputs.stable-url-minified }}" --output stable.min.js || true

      - name: Deploy to S3
        run: |
          # These files are intended for auto-update mechanisms.
          # We don't need to care to put the "correct" versions into their correlating prefixes.
          for PREFIX in "v2.0.0-beta.8" "v2.0.0-beta.9" "v2.0.0-beta.10" "v2.0.0-beta.11" "main"; do
            # Put the release-info.json
            aws s3api put-object \
              --bucket kitten-science-us0 \
              --key $PREFIX/release-info.json \
              --cache-control "public, s-maxage=3600" \
              --content-type "application/json" \
              --body release-info.json

            # Put the dev scripts on the channel.
            aws s3api put-object \
              --bucket kitten-science-us0 \
              --key $PREFIX/dev.js \
              --cache-control "public, s-maxage=600" \
              --content-type "text/javascript" \
              --body dev.js || true
            aws s3api put-object \
              --bucket kitten-science-us0 \
              --key $PREFIX/dev.min.js \
              --cache-control "public, s-maxage=600" \
              --content-type "text/javascript" \
              --body dev.min.js || true

            # Put the nightly scripts on the channel.
            aws s3api put-object \
              --bucket kitten-science-us0 \
              --key $PREFIX/nightly.js \
              --cache-control "public, s-maxage=3600" \
              --content-type "text/javascript" \
              --body nightly.js || true
            aws s3api put-object \
              --bucket kitten-science-us0 \
              --key $PREFIX/nightly.min.js \
              --cache-control "public, s-maxage=3600" \
              --content-type "text/javascript" \
              --body nightly.min.js || true

            # Put the stable scripts on the channel.
            aws s3api put-object \
              --bucket kitten-science-us0 \
              --key $PREFIX/stable.js \
              --cache-control "public, s-maxage=86400" \
              --content-type "text/javascript" \
              --body stable.js || true
            aws s3api put-object \
              --bucket kitten-science-us0 \
              --key $PREFIX/stable.min.js \
              --cache-control "public, s-maxage=86400" \
              --content-type "text/javascript" \
              --body stable.min.js || true
          done
