{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://schema.kitten-science.com/working-draft/baseline/engine-state.schema.json",
  "$defs": {
    "building-bonfire": {
      "description": "Kitten Scientists Bonfire Building",
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "description": "Should we build this building?",
          "type": "boolean"
        },
        "max": {
          "description": "The limit for how many times to build this.\n-1 means unlimited",
          "type": "number"
        }
      },
      "required": ["enabled", "max"],
      "type": "object"
    },
    "building-religion": {
      "description": "Kitten Scientists Religion Building",
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "description": "Should we build this building?",
          "type": "boolean"
        },
        "max": {
          "description": "The limit for how many times to build this.\n-1 means unlimited",
          "type": "number"
        }
      },
      "required": ["enabled", "max"],
      "type": "object"
    },
    "building-space": {
      "description": "Kitten Scientists Space Building",
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "description": "Should we build this building?",
          "type": "boolean"
        },
        "max": {
          "description": "The limit for how many times to build this.\n-1 means unlimited",
          "type": "number"
        }
      },
      "required": ["enabled", "max"],
      "type": "object"
    },
    "building-time": {
      "description": "Kitten Scientists Time Building",
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "description": "Should we build this building?",
          "type": "boolean"
        },
        "max": {
          "description": "The limit for how many times to build this.\n-1 means unlimited",
          "type": "number"
        }
      },
      "required": ["enabled", "max"],
      "type": "object"
    },
    "log-filter": {
      "description": "Kitten Scientists Log Filter",
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "description": "Is this filter enabled?",
          "type": "boolean"
        }
      },
      "required": ["enabled"],
      "type": "object"
    },
    "policy": {
      "description": "Kitten Scientists Policy",
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "description": "Should this policy be enforced automatically?",
          "type": "boolean"
        }
      },
      "required": ["enabled"],
      "type": "object"
    },
    "reset-building": {
      "description": "Kitten Scientists Reset Building",
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "description": "Should we require having this building built?",
          "type": "boolean"
        },
        "trigger": {
          "description": "How many of this building need to be built?\n-1 means infinite, preventing any resets.",
          "maximum": 9007199254740991,
          "minimum": -1,
          "type": "number"
        }
      },
      "required": ["enabled", "trigger"],
      "type": "object"
    },
    "reset-resource": {
      "description": "Kitten Scientists Reset Resource",
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "description": "Should we require having this resource stocked?",
          "type": "boolean"
        },
        "stock": {
          "description": "How many of this resource should be in stock?\n-1 means infinite, preventing any resets.",
          "type": "number"
        }
      },
      "required": ["enabled", "stock"],
      "type": "object"
    },
    "reset-upgrade": {
      "description": "Kitten Scientists Reset Upgrade",
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "description": "Should we require having this upgrade researched?",
          "type": "boolean"
        }
      },
      "required": ["enabled"],
      "type": "object"
    },
    "resource-control": {
      "description": "Kitten Scientists Resource Control",
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "description": "Is this resource under control?",
          "type": "boolean"
        },
        "consume": {
          "description": "How much of the available resources should be consumed by KS?",
          "type": "number"
        },
        "stock": {
          "description": "How much of the resource to always keep in stock?",
          "type": "number"
        }
      },
      "required": ["enabled", "consume", "stock"],
      "type": "object"
    },
    "space-mission": {
      "description": "Kitten Scientists Space Mission",
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "description": "Should we conduct this mission?",
          "type": "boolean"
        }
      },
      "required": ["enabled"],
      "type": "object"
    },
    "tech": {
      "description": "Kitten Scientists Technology",
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "description": "Should this technology be researched automatically?",
          "type": "boolean"
        }
      },
      "required": ["enabled"],
      "type": "object"
    },
    "time-skip-cycle": {
      "description": "Kitten Scientists Time Skip Cycle",
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "description": "Should we skip during this cycle?",
          "type": "boolean"
        }
      },
      "required": ["enabled"],
      "type": "object"
    },
    "time-skip-season": {
      "description": "Kitten Scientists Time Skip Season",
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "description": "Should we skip during this season?",
          "type": "boolean"
        }
      },
      "required": ["enabled"],
      "type": "object"
    },
    "trade-embassy": {
      "description": "Kitten Scientists Trade Embassy",
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "description": "Should we build embassies for this race?",
          "type": "boolean"
        },
        "max": {
          "description": "How many embassies should we build?",
          "type": "number"
        }
      },
      "required": ["enabled", "max"],
      "type": "object"
    },
    "trade-race": {
      "description": "Kitten Scientists Trade Race",
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "description": "Should we automatically trade with this race?",
          "type": "boolean"
        },
        "limited": {
          "description": "Should we use limited trading with this race?",
          "type": "boolean"
        },
        "seasons": {
          "additionalProperties": false,
          "description": "The seasons during which to trade with this race.",
          "properties": {
            "autumn": { "$ref": "#/$defs/trade-season" },
            "spring": { "$ref": "#/$defs/trade-season" },
            "summer": { "$ref": "#/$defs/trade-season" },
            "winter": { "$ref": "#/$defs/trade-season" }
          },
          "required": ["autumn", "spring", "summer", "winter"],
          "type": "object"
        }
      },
      "required": ["enabled", "limited", "seasons"],
      "type": "object"
    },
    "trade-season": {
      "description": "Kitten Scientists Trade Season",
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "description": "Should we trade during this season?",
          "type": "boolean"
        }
      },
      "required": ["enabled"],
      "type": "object"
    },
    "village-job": {
      "description": "Kitten Scientists Village Job",
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "description": "Should we assign free kittens to this job?",
          "type": "boolean"
        },
        "max": {
          "description": "How many kittens should we assign to this job?",
          "type": "number"
        }
      },
      "required": ["enabled", "max"],
      "type": "object"
    },
    "workshop-resource": {
      "description": "Kitten Scientists Workshop Resource",
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "description": "Should we craft this resource?",
          "type": "boolean"
        },
        "limited": {
          "description": "Limited crafting only uses up an amount proportional to your stock.",
          "type": "boolean"
        },
        "max": {
          "description": "Stop crafting when we have this many items stocked.",
          "type": "number"
        }
      },
      "required": ["enabled", "limited", "max"],
      "type": "object"
    },
    "workshop-upgrade": {
      "description": "Kitten Scientists Workshop Upgrade",
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "description": "Should we research this upgrade?",
          "type": "boolean"
        }
      },
      "required": ["enabled"],
      "type": "object"
    }
  },
  "title": "Engine State Baseline",
  "description": "Kitten Scientists Engine State Basline",
  "additionalProperties": false,
  "properties": {
    "$schema": {
      "description": "The engine state JSON schema for the document. Ideally, points to this document.",
      "type": "string"
    },
    "v": {
      "description": "The semantic version number of the engine this baseline relates to.",
      "pattern": "^(?:0|[1-9]\\d*)\\.(?:0|[1-9]\\d*)\\.(?:0|[1-9]\\d*)(?:-.+)$",
      "type": "string"
    },
    "engine": {
      "additionalProperties": false,
      "description": "Settings relating to KS itself.",
      "properties": {
        "enabled": {
          "description": "Is the engine enabled?",
          "type": "boolean"
        },
        "interval": {
          "description": "The duration between iterations of the engine.",
          "maximum": 9007199254740991,
          "minimum": 1,
          "type": "number"
        },
        "language": {
          "additionalProperties": false,
          "description": "Language settings.",
          "properties": {
            "selected": {
              "description": "The language KS runs at.",
              "enum": ["de", "en", "he", "zh"],
              "type": "string"
            }
          },
          "required": ["selected"],
          "type": "object"
        },
        "filters": {
          "additionalProperties": false,
          "description": "Log filters.",
          "properties": {
            "enabled": {
              "description": "Should log filtering be enabled?",
              "type": "boolean"
            },
            "filters": {
              "additionalProperties": false,
              "description": "Log filter configuration.",
              "properties": {
                "build": { "$ref": "#/$defs/log-filter" },
                "craft": { "$ref": "#/$defs/log-filter" },
                "upgrade": { "$ref": "#/$defs/log-filter" },
                "research": { "$ref": "#/$defs/log-filter" },
                "trade": { "$ref": "#/$defs/log-filter" },
                "hunt": { "$ref": "#/$defs/log-filter" },
                "praise": { "$ref": "#/$defs/log-filter" },
                "adore": { "$ref": "#/$defs/log-filter" },
                "transcend": { "$ref": "#/$defs/log-filter" },
                "faith": { "$ref": "#/$defs/log-filter" },
                "accelerate": { "$ref": "#/$defs/log-filter" },
                "timeSkip": { "$ref": "#/$defs/log-filter" },
                "festival": { "$ref": "#/$defs/log-filter" },
                "star": { "$ref": "#/$defs/log-filter" },
                "distribute": { "$ref": "#/$defs/log-filter" },
                "promote": { "$ref": "#/$defs/log-filter" },
                "misc": { "$ref": "#/$defs/log-filter" }
              },
              "required": [
                "build",
                "craft",
                "upgrade",
                "research",
                "trade",
                "hunt",
                "praise",
                "adore",
                "transcend",
                "faith",
                "accelerate",
                "timeSkip",
                "festival",
                "star",
                "distribute",
                "promote",
                "misc"
              ],
              "type": "object"
            }
          },
          "required": ["enabled", "filters"],
          "type": "object"
        },
        "resources": {
          "additionalProperties": false,
          "description": "The resource control settings section.",
          "properties": {
            "enabled": {
              "description": "Is the resource control enabled?\nSetting this to `false` has no effect, as resource control is always active.",
              "type": "boolean"
            },
            "resources": {
              "additionalProperties": false,
              "description": "The resource control settings of this state.",
              "properties": {
                "alloy": { "$ref": "#/$defs/resource-control" },
                "beam": { "$ref": "#/$defs/resource-control" },
                "blueprint": { "$ref": "#/$defs/resource-control" },
                "compedium": { "$ref": "#/$defs/resource-control" },
                "concrate": { "$ref": "#/$defs/resource-control" },
                "eludium": { "$ref": "#/$defs/resource-control" },
                "gear": { "$ref": "#/$defs/resource-control" },
                "kerosene": { "$ref": "#/$defs/resource-control" },
                "manuscript": { "$ref": "#/$defs/resource-control" },
                "megalith": { "$ref": "#/$defs/resource-control" },
                "parchment": { "$ref": "#/$defs/resource-control" },
                "plate": { "$ref": "#/$defs/resource-control" },
                "scaffold": { "$ref": "#/$defs/resource-control" },
                "ship": { "$ref": "#/$defs/resource-control" },
                "slab": { "$ref": "#/$defs/resource-control" },
                "steel": { "$ref": "#/$defs/resource-control" },
                "tanker": { "$ref": "#/$defs/resource-control" },
                "thorium": { "$ref": "#/$defs/resource-control" },
                "wood": { "$ref": "#/$defs/resource-control" },
                "alicorn": { "$ref": "#/$defs/resource-control" },
                "antimatter": { "$ref": "#/$defs/resource-control" },
                "blackcoin": { "$ref": "#/$defs/resource-control" },
                "bloodstone": { "$ref": "#/$defs/resource-control" },
                "burnedParagon": { "$ref": "#/$defs/resource-control" },
                "catnip": { "$ref": "#/$defs/resource-control" },
                "coal": { "$ref": "#/$defs/resource-control" },
                "culture": { "$ref": "#/$defs/resource-control" },
                "elderBox": { "$ref": "#/$defs/resource-control" },
                "faith": { "$ref": "#/$defs/resource-control" },
                "furs": { "$ref": "#/$defs/resource-control" },
                "gflops": { "$ref": "#/$defs/resource-control" },
                "gold": { "$ref": "#/$defs/resource-control" },
                "hashrates": { "$ref": "#/$defs/resource-control" },
                "iron": { "$ref": "#/$defs/resource-control" },
                "ivory": { "$ref": "#/$defs/resource-control" },
                "karma": { "$ref": "#/$defs/resource-control" },
                "kittens": { "$ref": "#/$defs/resource-control" },
                "manpower": { "$ref": "#/$defs/resource-control" },
                "minerals": { "$ref": "#/$defs/resource-control" },
                "necrocorn": { "$ref": "#/$defs/resource-control" },
                "oil": { "$ref": "#/$defs/resource-control" },
                "paragon": { "$ref": "#/$defs/resource-control" },
                "relic": { "$ref": "#/$defs/resource-control" },
                "science": { "$ref": "#/$defs/resource-control" },
                "sorrow": { "$ref": "#/$defs/resource-control" },
                "spice": { "$ref": "#/$defs/resource-control" },
                "starchart": { "$ref": "#/$defs/resource-control" },
                "tears": { "$ref": "#/$defs/resource-control" },
                "temporalFlux": { "$ref": "#/$defs/resource-control" },
                "timeCrystal": { "$ref": "#/$defs/resource-control" },
                "titanium": { "$ref": "#/$defs/resource-control" },
                "tMythril": { "$ref": "#/$defs/resource-control" },
                "unicorns": { "$ref": "#/$defs/resource-control" },
                "unobtainium": { "$ref": "#/$defs/resource-control" },
                "uranium": { "$ref": "#/$defs/resource-control" },
                "void": { "$ref": "#/$defs/resource-control" },
                "wrappingPaper": { "$ref": "#/$defs/resource-control" },
                "zebras": { "$ref": "#/$defs/resource-control" }
              },
              "required": [
                "alloy",
                "beam",
                "blueprint",
                "compedium",
                "concrate",
                "eludium",
                "gear",
                "kerosene",
                "manuscript",
                "megalith",
                "parchment",
                "plate",
                "scaffold",
                "ship",
                "slab",
                "steel",
                "tanker",
                "thorium",
                "wood",
                "alicorn",
                "antimatter",
                "blackcoin",
                "bloodstone",
                "burnedParagon",
                "catnip",
                "coal",
                "culture",
                "elderBox",
                "faith",
                "furs",
                "gflops",
                "gold",
                "hashrates",
                "iron",
                "ivory",
                "karma",
                "kittens",
                "manpower",
                "minerals",
                "necrocorn",
                "oil",
                "paragon",
                "relic",
                "science",
                "sorrow",
                "spice",
                "starchart",
                "tears",
                "temporalFlux",
                "timeCrystal",
                "titanium",
                "tMythril",
                "unicorns",
                "unobtainium",
                "uranium",
                "void",
                "wrappingPaper",
                "zebras"
              ],
              "type": "object"
            }
          },
          "required": ["enabled", "resources"],
          "type": "object"
        },
        "states": {
          "additionalProperties": false,
          "description": "State Management",
          "properties": {
            "enabled": {
              "description": "Should engine states be enabled?\nSetting this to `false` has no effect, as state management is always active.",
              "type": "boolean"
            },
            "noConfirm": {
              "additionalProperties": false,
              "description": "Confirmation of changes.",
              "properties": {
                "enabled": {
                  "description": "Should we skip asking for confirmation for destructive operations?",
                  "type": "boolean"
                }
              },
              "required": ["enabled"],
              "type": "object"
            },
            "compress": {
              "additionalProperties": false,
              "description": "Compression settings.",
              "properties": {
                "enabled": {
                  "description": "Should copied data be compressed with KG-internal LZString compression?",
                  "type": "boolean"
                }
              },
              "required": ["enabled"],
              "type": "object"
            }
          },
          "required": ["enabled", "noConfirm", "compress"],
          "type": "object"
        }
      },
      "required": ["enabled", "interval", "language", "filters", "resources", "states"],
      "type": "object"
    },
    "bonfire": {
      "additionalProperties": false,
      "description": "Features relating to the Bonfire tab.",
      "properties": {
        "enabled": {
          "description": "Is the bonfire automation enabled?",
          "type": "boolean"
        },
        "trigger": {
          "description": "What's the trigger value for this automation?",
          "maximum": 1,
          "minimum": 0,
          "type": "number"
        },
        "buildings": {
          "additionalProperties": false,
          "description": "Configuration for which buildings to build automatically.",
          "properties": {
            "academy": { "$ref": "#/$defs/building-bonfire" },
            "accelerator": { "$ref": "#/$defs/building-bonfire" },
            "aiCore": { "$ref": "#/$defs/building-bonfire" },
            "amphitheatre": { "$ref": "#/$defs/building-bonfire" },
            "aqueduct": { "$ref": "#/$defs/building-bonfire" },
            "barn": { "$ref": "#/$defs/building-bonfire" },
            "biolab": { "$ref": "#/$defs/building-bonfire" },
            "brewery": { "$ref": "#/$defs/building-bonfire" },
            "broadcasttower": { "$ref": "#/$defs/building-bonfire" },
            "calciner": { "$ref": "#/$defs/building-bonfire" },
            "chapel": { "$ref": "#/$defs/building-bonfire" },
            "chronosphere": { "$ref": "#/$defs/building-bonfire" },
            "dataCenter": { "$ref": "#/$defs/building-bonfire" },
            "factory": { "$ref": "#/$defs/building-bonfire" },
            "field": { "$ref": "#/$defs/building-bonfire" },
            "harbor": { "$ref": "#/$defs/building-bonfire" },
            "hut": { "$ref": "#/$defs/building-bonfire" },
            "hydroplant": { "$ref": "#/$defs/building-bonfire" },
            "library": { "$ref": "#/$defs/building-bonfire" },
            "logHouse": { "$ref": "#/$defs/building-bonfire" },
            "lumberMill": { "$ref": "#/$defs/building-bonfire" },
            "magneto": { "$ref": "#/$defs/building-bonfire" },
            "mansion": { "$ref": "#/$defs/building-bonfire" },
            "mine": { "$ref": "#/$defs/building-bonfire" },
            "mint": { "$ref": "#/$defs/building-bonfire" },
            "observatory": { "$ref": "#/$defs/building-bonfire" },
            "oilWell": { "$ref": "#/$defs/building-bonfire" },
            "pasture": { "$ref": "#/$defs/building-bonfire" },
            "quarry": { "$ref": "#/$defs/building-bonfire" },
            "reactor": { "$ref": "#/$defs/building-bonfire" },
            "smelter": { "$ref": "#/$defs/building-bonfire" },
            "solarfarm": { "$ref": "#/$defs/building-bonfire" },
            "spaceport": { "$ref": "#/$defs/building-bonfire" },
            "steamworks": { "$ref": "#/$defs/building-bonfire" },
            "temple": { "$ref": "#/$defs/building-bonfire" },
            "tradepost": { "$ref": "#/$defs/building-bonfire" },
            "warehouse": { "$ref": "#/$defs/building-bonfire" },
            "workshop": { "$ref": "#/$defs/building-bonfire" },
            "zebraForge": { "$ref": "#/$defs/building-bonfire" },
            "zebraOutpost": { "$ref": "#/$defs/building-bonfire" },
            "zebraWorkshop": { "$ref": "#/$defs/building-bonfire" },
            "ziggurat": { "$ref": "#/$defs/building-bonfire" }
          },
          "required": [
            "academy",
            "accelerator",
            "aiCore",
            "amphitheatre",
            "aqueduct",
            "barn",
            "biolab",
            "brewery",
            "broadcasttower",
            "calciner",
            "chapel",
            "chronosphere",
            "dataCenter",
            "factory",
            "field",
            "harbor",
            "hut",
            "hydroplant",
            "library",
            "logHouse",
            "lumberMill",
            "magneto",
            "mansion",
            "mine",
            "mint",
            "observatory",
            "oilWell",
            "pasture",
            "quarry",
            "reactor",
            "smelter",
            "solarfarm",
            "spaceport",
            "steamworks",
            "temple",
            "tradepost",
            "warehouse",
            "workshop",
            "zebraForge",
            "zebraOutpost",
            "zebraWorkshop",
            "ziggurat"
          ],
          "type": "object"
        },
        "gatherCatnip": {
          "additionalProperties": false,
          "description": "Should we automatically gather catnip?",
          "properties": {
            "enabled": {
              "description": "Turn auto gathering on?",
              "type": "boolean"
            }
          },
          "required": ["enabled"],
          "type": "object"
        },
        "turnOnSteamworks": {
          "additionalProperties": false,
          "description": "Should Steamworks be turned on if they are turned off?",
          "properties": {
            "enabled": {
              "description": "Turn the Steamworks on?",
              "type": "boolean"
            }
          },
          "required": ["enabled"],
          "type": "object"
        },
        "turnOnMagnetos": {
          "additionalProperties": false,
          "description": "Should Magnetos be turned on if they are turned off?",
          "properties": {
            "enabled": {
              "description": "Turn the Magnetos on?",
              "type": "boolean"
            }
          },
          "required": ["enabled"],
          "type": "object"
        },
        "upgradeBuildings": {
          "additionalProperties": false,
          "description": "Configuration for building upgrades.",
          "properties": {
            "enabled": {
              "description": "Should buildings be upgraded automatically?",
              "type": "boolean"
            },
            "buildings": {
              "additionalProperties": false,
              "description": "Which buildings to upgrade.",
              "properties": {
                "broadcasttower": {
                  "additionalProperties": false,
                  "description": "Broadcast Tower",
                  "properties": {
                    "enabled": {
                      "description": "Automatically upgrade Amphitheatres to Broadcast Towers?",
                      "type": "boolean"
                    }
                  },
                  "required": ["enabled"],
                  "type": "object"
                },
                "dataCenter": {
                  "additionalProperties": false,
                  "description": "Data Center",
                  "properties": {
                    "enabled": {
                      "description": "Automatically upgrade Libraries to Data Centers?",
                      "type": "boolean"
                    }
                  },
                  "required": ["enabled"],
                  "type": "object"
                },
                "hydroplant": {
                  "additionalProperties": false,
                  "description": "Hydro Plant",
                  "properties": {
                    "enabled": {
                      "description": "Automatically upgrade Aqueducts to Hydro Plants?",
                      "type": "boolean"
                    }
                  },
                  "required": ["enabled"],
                  "type": "object"
                },
                "solarfarm": {
                  "additionalProperties": false,
                  "description": "Solar Farm",
                  "properties": {
                    "enabled": {
                      "description": "Automatically upgrade Pastures to Solar Farms?",
                      "type": "boolean"
                    }
                  },
                  "required": ["enabled"],
                  "type": "object"
                }
              },
              "required": ["broadcasttower", "dataCenter", "hydroplant", "solarfarm"],
              "type": "object"
            }
          },
          "required": ["enabled", "buildings"],
          "type": "object"
        }
      },
      "required": [
        "enabled",
        "trigger",
        "buildings",
        "gatherCatnip",
        "turnOnSteamworks",
        "turnOnMagnetos",
        "upgradeBuildings"
      ],
      "type": "object"
    },
    "religion": {
      "additionalProperties": false,
      "description": "Features relating to the Religion tab.",
      "properties": {
        "enabled": {
          "description": "Is the religion automation enabled?",
          "type": "boolean"
        },
        "trigger": {
          "description": "What's the trigger value for this automation?",
          "maximum": 1,
          "minimum": 0,
          "type": "number"
        },
        "buildings": {
          "additionalProperties": false,
          "description": "Configuration for which buildings to build automatically.",
          "properties": {
            "apocripha": { "$ref": "#/$defs/building-religion" },
            "basilica": { "$ref": "#/$defs/building-religion" },
            "blackCore": { "$ref": "#/$defs/building-religion" },
            "blackLibrary": { "$ref": "#/$defs/building-religion" },
            "blackNexus": { "$ref": "#/$defs/building-religion" },
            "blackObelisk": { "$ref": "#/$defs/building-religion" },
            "blackPyramid": { "$ref": "#/$defs/building-religion" },
            "blackRadiance": { "$ref": "#/$defs/building-religion" },
            "blazar": { "$ref": "#/$defs/building-religion" },
            "darkNova": { "$ref": "#/$defs/building-religion" },
            "goldenSpire": { "$ref": "#/$defs/building-religion" },
            "holyGenocide": { "$ref": "#/$defs/building-religion" },
            "ivoryCitadel": { "$ref": "#/$defs/building-religion" },
            "ivoryTower": { "$ref": "#/$defs/building-religion" },
            "marker": { "$ref": "#/$defs/building-religion" },
            "scholasticism": { "$ref": "#/$defs/building-religion" },
            "singularity": { "$ref": "#/$defs/building-religion" },
            "skyPalace": { "$ref": "#/$defs/building-religion" },
            "solarchant": { "$ref": "#/$defs/building-religion" },
            "solarRevolution": { "$ref": "#/$defs/building-religion" },
            "stainedGlass": { "$ref": "#/$defs/building-religion" },
            "sunAltar": { "$ref": "#/$defs/building-religion" },
            "sunspire": { "$ref": "#/$defs/building-religion" },
            "templars": { "$ref": "#/$defs/building-religion" },
            "transcendence": { "$ref": "#/$defs/building-religion" },
            "unicornGraveyard": { "$ref": "#/$defs/building-religion" },
            "unicornNecropolis": { "$ref": "#/$defs/building-religion" },
            "unicornPasture": { "$ref": "#/$defs/building-religion" },
            "unicornTomb": { "$ref": "#/$defs/building-religion" },
            "unicornUtopia": { "$ref": "#/$defs/building-religion" }
          },
          "required": [
            "apocripha",
            "basilica",
            "blackCore",
            "blackLibrary",
            "blackNexus",
            "blackObelisk",
            "blackPyramid",
            "blackRadiance",
            "blazar",
            "darkNova",
            "goldenSpire",
            "holyGenocide",
            "ivoryCitadel",
            "ivoryTower",
            "marker",
            "scholasticism",
            "singularity",
            "skyPalace",
            "solarchant",
            "solarRevolution",
            "stainedGlass",
            "sunAltar",
            "sunspire",
            "templars",
            "transcendence",
            "unicornGraveyard",
            "unicornNecropolis",
            "unicornPasture",
            "unicornTomb",
            "unicornUtopia"
          ],
          "type": "object"
        },
        "bestUnicornBuilding": {
          "additionalProperties": false,
          "description": "Best Unicorn building",
          "properties": {
            "enabled": {
              "description": "Should we enforce to always build the most lucrative building first?",
              "type": "boolean"
            }
          },
          "required": ["enabled"],
          "type": "object"
        },
        "sacrificeAlicorns": {
          "additionalProperties": false,
          "description": "Sacrifice Alicorns",
          "properties": {
            "enabled": {
              "description": "Should we sacrifice alicorns?",
              "type": "boolean"
            },
            "trigger": {
              "description": "Sacrifice when we have this many alicorns.",
              "maximum": 9007199254740991,
              "minimum": -1,
              "type": "number"
            }
          },
          "required": ["enabled", "trigger"],
          "type": "object"
        },
        "sacrificeUnicorns": {
          "additionalProperties": false,
          "description": "Sacrifice Unicorns",
          "properties": {
            "enabled": {
              "description": "Should we sacrifice unicorns?",
              "type": "boolean"
            },
            "trigger": {
              "description": "Sacrifice when we have this many unicorns.",
              "maximum": 9007199254740991,
              "minimum": -1,
              "type": "number"
            }
          },
          "required": ["enabled", "trigger"],
          "type": "object"
        },
        "refineTears": {
          "additionalProperties": false,
          "description": "Refine Unicorn Tears",
          "properties": {
            "enabled": {
              "description": "Should we refine unicorn tears into BLS?",
              "type": "boolean"
            },
            "trigger": {
              "description": "Refine when we have this many tears.",
              "maximum": 9007199254740991,
              "minimum": -1,
              "type": "number"
            }
          },
          "required": ["enabled", "trigger"],
          "type": "object"
        },
        "refineTimeCrystals": {
          "additionalProperties": false,
          "description": "Refine Time Crystals",
          "properties": {
            "enabled": {
              "description": "Should we refine time crystals into relics?",
              "type": "boolean"
            },
            "trigger": {
              "description": "Refine when we have this many time crystals.",
              "maximum": 9007199254740991,
              "minimum": -1,
              "type": "number"
            }
          },
          "required": ["enabled", "trigger"],
          "type": "object"
        },
        "autoPraise": {
          "additionalProperties": false,
          "description": "Praising",
          "properties": {
            "enabled": {
              "description": "Should we praise the sun?",
              "type": "boolean"
            },
            "trigger": {
              "description": "Praise when we have this much faith.",
              "minimum": 0,
              "maximum": 1,
              "type": "number"
            }
          },
          "required": ["enabled", "trigger"],
          "type": "object"
        },
        "adore": {
          "additionalProperties": false,
          "description": "Adore the galaxy",
          "properties": {
            "enabled": {
              "description": "Should we adore the galaxy?",
              "type": "boolean"
            },
            "trigger": {
              "description": "Adore when we have this much epiphany.",
              "maximum": 1,
              "minimum": 0,
              "type": "number"
            }
          },
          "required": ["enabled", "trigger"],
          "type": "object"
        },
        "transcend": {
          "additionalProperties": false,
          "description": "Transcen",
          "properties": {
            "enabled": {
              "description": "Should we transcend whenever it would be lucrative?",
              "type": "boolean"
            }
          },
          "required": ["enabled"],
          "type": "object"
        }
      },
      "required": [
        "enabled",
        "trigger",
        "buildings",
        "bestUnicornBuilding",
        "sacrificeAlicorns",
        "sacrificeUnicorns",
        "refineTears",
        "refineTimeCrystals",
        "autoPraise",
        "adore",
        "transcend"
      ],
      "type": "object"
    },
    "science": {
      "additionalProperties": false,
      "description": "Features relating to the Science tab.",
      "properties": {
        "enabled": {
          "description": "Is the science automation enabled?",
          "type": "boolean"
        },
        "policies": {
          "additionalProperties": false,
          "description": "Settings for automatic policy enforcement.",
          "properties": {
            "enabled": {
              "description": "Is the policy automation enabled?",
              "type": "boolean"
            },
            "policies": {
              "additionalProperties": false,
              "description": "The policies to automatically enforce.",
              "properties": {
                "authocracy": { "$ref": "#/$defs/policy" },
                "bigStickPolicy": { "$ref": "#/$defs/policy" },
                "carnivale": { "$ref": "#/$defs/policy" },
                "cityOnAHill": { "$ref": "#/$defs/policy" },
                "clearCutting": { "$ref": "#/$defs/policy" },
                "communism": { "$ref": "#/$defs/policy" },
                "conservation": { "$ref": "#/$defs/policy" },
                "culturalExchange": { "$ref": "#/$defs/policy" },
                "diplomacy": { "$ref": "#/$defs/policy" },
                "environmentalism": { "$ref": "#/$defs/policy" },
                "epicurianism": { "$ref": "#/$defs/policy" },
                "expansionism": { "$ref": "#/$defs/policy" },
                "extravagance": { "$ref": "#/$defs/policy" },
                "fascism": { "$ref": "#/$defs/policy" },
                "frugality": { "$ref": "#/$defs/policy" },
                "fullIndustrialization": { "$ref": "#/$defs/policy" },
                "isolationism": { "$ref": "#/$defs/policy" },
                "knowledgeSharing": { "$ref": "#/$defs/policy" },
                "liberalism": { "$ref": "#/$defs/policy" },
                "liberty": { "$ref": "#/$defs/policy" },
                "militarizeSpace": { "$ref": "#/$defs/policy" },
                "monarchy": { "$ref": "#/$defs/policy" },
                "mysticism": { "$ref": "#/$defs/policy" },
                "necrocracy": { "$ref": "#/$defs/policy" },
                "openWoodlands": { "$ref": "#/$defs/policy" },
                "outerSpaceTreaty": { "$ref": "#/$defs/policy" },
                "radicalXenophobia": { "$ref": "#/$defs/policy" },
                "rationality": { "$ref": "#/$defs/policy" },
                "rationing": { "$ref": "#/$defs/policy" },
                "republic": { "$ref": "#/$defs/policy" },
                "socialism": { "$ref": "#/$defs/policy" },
                "stoicism": { "$ref": "#/$defs/policy" },
                "stripMining": { "$ref": "#/$defs/policy" },
                "sustainability": { "$ref": "#/$defs/policy" },
                "technocracy": { "$ref": "#/$defs/policy" },
                "theocracy": { "$ref": "#/$defs/policy" },
                "tradition": { "$ref": "#/$defs/policy" },
                "transkittenism": { "$ref": "#/$defs/policy" },
                "zebraRelationsAppeasement": { "$ref": "#/$defs/policy" },
                "zebraRelationsBellicosity": { "$ref": "#/$defs/policy" }
              },
              "required": [
                "authocracy",
                "bigStickPolicy",
                "carnivale",
                "cityOnAHill",
                "clearCutting",
                "communism",
                "conservation",
                "culturalExchange",
                "diplomacy",
                "environmentalism",
                "epicurianism",
                "expansionism",
                "extravagance",
                "fascism",
                "frugality",
                "fullIndustrialization",
                "isolationism",
                "knowledgeSharing",
                "liberalism",
                "liberty",
                "militarizeSpace",
                "monarchy",
                "mysticism",
                "necrocracy",
                "openWoodlands",
                "outerSpaceTreaty",
                "radicalXenophobia",
                "rationality",
                "rationing",
                "republic",
                "socialism",
                "stoicism",
                "stripMining",
                "sustainability",
                "technocracy",
                "theocracy",
                "tradition",
                "transkittenism",
                "zebraRelationsAppeasement",
                "zebraRelationsBellicosity"
              ],
              "type": "object"
            }
          },
          "required": ["enabled", "policies"],
          "type": "object"
        },
        "techs": {
          "additionalProperties": false,
          "description": "Settings for automatic technology research.",
          "properties": {
            "enabled": {
              "description": "Is the technology research automation enabled?",
              "type": "boolean"
            },
            "techs": {
              "additionalProperties": false,
              "description": "The technologies to automatically research.",
              "properties": {
                "acoustics": { "$ref": "#/$defs/tech" },
                "advExogeology": { "$ref": "#/$defs/tech" },
                "agriculture": { "$ref": "#/$defs/tech" },
                "ai": { "$ref": "#/$defs/tech" },
                "animal": { "$ref": "#/$defs/tech" },
                "antimatter": { "$ref": "#/$defs/tech" },
                "archeology": { "$ref": "#/$defs/tech" },
                "archery": { "$ref": "#/$defs/tech" },
                "architecture": { "$ref": "#/$defs/tech" },
                "artificialGravity": { "$ref": "#/$defs/tech" },
                "astronomy": { "$ref": "#/$defs/tech" },
                "biochemistry": { "$ref": "#/$defs/tech" },
                "biology": { "$ref": "#/$defs/tech" },
                "blackchain": { "$ref": "#/$defs/tech" },
                "brewery": { "$ref": "#/$defs/tech" },
                "calendar": { "$ref": "#/$defs/tech" },
                "chemistry": { "$ref": "#/$defs/tech" },
                "chronophysics": { "$ref": "#/$defs/tech" },
                "civil": { "$ref": "#/$defs/tech" },
                "combustion": { "$ref": "#/$defs/tech" },
                "construction": { "$ref": "#/$defs/tech" },
                "cryptotheology": { "$ref": "#/$defs/tech" },
                "currency": { "$ref": "#/$defs/tech" },
                "dimensionalPhysics": { "$ref": "#/$defs/tech" },
                "drama": { "$ref": "#/$defs/tech" },
                "ecology": { "$ref": "#/$defs/tech" },
                "electricity": { "$ref": "#/$defs/tech" },
                "electronics": { "$ref": "#/$defs/tech" },
                "engineering": { "$ref": "#/$defs/tech" },
                "exogeology": { "$ref": "#/$defs/tech" },
                "exogeophysics": { "$ref": "#/$defs/tech" },
                "genetics": { "$ref": "#/$defs/tech" },
                "hydroponics": { "$ref": "#/$defs/tech" },
                "industrialization": { "$ref": "#/$defs/tech" },
                "machinery": { "$ref": "#/$defs/tech" },
                "math": { "$ref": "#/$defs/tech" },
                "mechanization": { "$ref": "#/$defs/tech" },
                "metal": { "$ref": "#/$defs/tech" },
                "metalurgy": { "$ref": "#/$defs/tech" },
                "metaphysics": { "$ref": "#/$defs/tech" },
                "mining": { "$ref": "#/$defs/tech" },
                "nanotechnology": { "$ref": "#/$defs/tech" },
                "navigation": { "$ref": "#/$defs/tech" },
                "nuclearFission": { "$ref": "#/$defs/tech" },
                "oilProcessing": { "$ref": "#/$defs/tech" },
                "orbitalEngineering": { "$ref": "#/$defs/tech" },
                "paradoxalKnowledge": { "$ref": "#/$defs/tech" },
                "particlePhysics": { "$ref": "#/$defs/tech" },
                "philosophy": { "$ref": "#/$defs/tech" },
                "physics": { "$ref": "#/$defs/tech" },
                "quantumCryptography": { "$ref": "#/$defs/tech" },
                "robotics": { "$ref": "#/$defs/tech" },
                "rocketry": { "$ref": "#/$defs/tech" },
                "sattelites": { "$ref": "#/$defs/tech" },
                "steel": { "$ref": "#/$defs/tech" },
                "superconductors": { "$ref": "#/$defs/tech" },
                "tachyonTheory": { "$ref": "#/$defs/tech" },
                "terraformation": { "$ref": "#/$defs/tech" },
                "theology": { "$ref": "#/$defs/tech" },
                "thorium": { "$ref": "#/$defs/tech" },
                "voidSpace": { "$ref": "#/$defs/tech" },
                "writing": { "$ref": "#/$defs/tech" }
              },
              "required": [
                "acoustics",
                "advExogeology",
                "agriculture",
                "ai",
                "animal",
                "antimatter",
                "archeology",
                "archery",
                "architecture",
                "artificialGravity",
                "astronomy",
                "biochemistry",
                "biology",
                "blackchain",
                "brewery",
                "calendar",
                "chemistry",
                "chronophysics",
                "civil",
                "combustion",
                "construction",
                "cryptotheology",
                "currency",
                "dimensionalPhysics",
                "drama",
                "ecology",
                "electricity",
                "electronics",
                "engineering",
                "exogeology",
                "exogeophysics",
                "genetics",
                "hydroponics",
                "industrialization",
                "machinery",
                "math",
                "mechanization",
                "metal",
                "metalurgy",
                "metaphysics",
                "mining",
                "nanotechnology",
                "navigation",
                "nuclearFission",
                "oilProcessing",
                "orbitalEngineering",
                "paradoxalKnowledge",
                "particlePhysics",
                "philosophy",
                "physics",
                "quantumCryptography",
                "robotics",
                "rocketry",
                "sattelites",
                "steel",
                "superconductors",
                "tachyonTheory",
                "terraformation",
                "theology",
                "thorium",
                "voidSpace",
                "writing"
              ],
              "type": "object"
            }
          },
          "required": ["enabled", "techs"],
          "type": "object"
        },
        "observe": {
          "additionalProperties": false,
          "description": "Settings for automatic astronomical event observation.",
          "properties": {
            "enabled": {
              "description": "Should we observe astronomical events?",
              "type": "boolean"
            }
          },
          "required": ["enabled"],
          "type": "object"
        }
      },
      "required": ["enabled", "policies", "techs", "observe"],
      "type": "object"
    },
    "space": {
      "additionalProperties": false,
      "description": "Features relating to the Space tab.",
      "properties": {
        "enabled": {
          "description": "Is the space automation enabled?",
          "type": "boolean"
        },
        "trigger": {
          "description": "What's the trigger value for this automation?",
          "maximum": 1,
          "minimum": 0,
          "type": "number"
        },
        "buildings": {
          "additionalProperties": false,
          "description": "Configuration for which buildings to build automatically.",
          "properties": {
            "containmentChamber": { "$ref": "#/$defs/building-space" },
            "cryostation": { "$ref": "#/$defs/building-space" },
            "entangler": { "$ref": "#/$defs/building-space" },
            "heatsink": { "$ref": "#/$defs/building-space" },
            "hrHarvester": { "$ref": "#/$defs/building-space" },
            "hydrofracturer": { "$ref": "#/$defs/building-space" },
            "hydroponics": { "$ref": "#/$defs/building-space" },
            "moltenCore": { "$ref": "#/$defs/building-space" },
            "moonBase": { "$ref": "#/$defs/building-space" },
            "moonOutpost": { "$ref": "#/$defs/building-space" },
            "orbitalArray": { "$ref": "#/$defs/building-space" },
            "planetCracker": { "$ref": "#/$defs/building-space" },
            "researchVessel": { "$ref": "#/$defs/building-space" },
            "sattelite": { "$ref": "#/$defs/building-space" },
            "spaceBeacon": { "$ref": "#/$defs/building-space" },
            "spaceElevator": { "$ref": "#/$defs/building-space" },
            "spaceStation": { "$ref": "#/$defs/building-space" },
            "spiceRefinery": { "$ref": "#/$defs/building-space" },
            "sunforge": { "$ref": "#/$defs/building-space" },
            "sunlifter": { "$ref": "#/$defs/building-space" },
            "tectonic": { "$ref": "#/$defs/building-space" },
            "terraformingStation": { "$ref": "#/$defs/building-space" }
          },
          "required": [
            "containmentChamber",
            "cryostation",
            "entangler",
            "heatsink",
            "hrHarvester",
            "hydrofracturer",
            "hydroponics",
            "moltenCore",
            "moonBase",
            "moonOutpost",
            "orbitalArray",
            "planetCracker",
            "researchVessel",
            "sattelite",
            "spaceBeacon",
            "spaceElevator",
            "spaceStation",
            "spiceRefinery",
            "sunforge",
            "sunlifter",
            "tectonic",
            "terraformingStation"
          ],
          "type": "object"
        },
        "unlockMissions": {
          "additionalProperties": false,
          "description": "Configuration for which space missions to conduct automatically.",
          "properties": {
            "enabled": {
              "description": "Is the space automation enabled?",
              "type": "boolean"
            },
            "missions": {
              "additionalProperties": false,
              "description": "Which missions to conduct automatically.",
              "properties": {
                "centaurusSystemMission": { "$ref": "#/$defs/space-mission" },
                "charonMission": { "$ref": "#/$defs/space-mission" },
                "duneMission": { "$ref": "#/$defs/space-mission" },
                "furthestRingMission": { "$ref": "#/$defs/space-mission" },
                "heliosMission": { "$ref": "#/$defs/space-mission" },
                "kairoMission": { "$ref": "#/$defs/space-mission" },
                "moonMission": { "$ref": "#/$defs/space-mission" },
                "orbitalLaunch": { "$ref": "#/$defs/space-mission" },
                "piscineMission": { "$ref": "#/$defs/space-mission" },
                "rorschachMission": { "$ref": "#/$defs/space-mission" },
                "terminusMission": { "$ref": "#/$defs/space-mission" },
                "umbraMission": { "$ref": "#/$defs/space-mission" },
                "yarnMission": { "$ref": "#/$defs/space-mission" }
              },
              "required": [
                "centaurusSystemMission",
                "charonMission",
                "duneMission",
                "furthestRingMission",
                "heliosMission",
                "kairoMission",
                "moonMission",
                "orbitalLaunch",
                "piscineMission",
                "rorschachMission",
                "terminusMission",
                "umbraMission",
                "yarnMission"
              ],
              "type": "object"
            }
          },
          "required": ["enabled", "missions"],
          "type": "object"
        }
      },
      "required": ["enabled", "trigger", "buildings", "unlockMissions"],
      "type": "object"
    },
    "timeControl": {
      "additionalProperties": false,
      "description": "Features relating to controlling time in the game.",
      "properties": {
        "enabled": {
          "description": "Is the time control enabled?",
          "type": "boolean"
        },
        "accelerateTime": {
          "additionalProperties": false,
          "description": "Accelerate time.",
          "properties": {
            "enabled": {
              "description": "Should we accelerate time automatically?",
              "type": "boolean"
            },
            "trigger": {
              "description": "Accelerate time when we have this much temporal flux.",
              "maximum": 1,
              "minimum": 0,
              "type": "number"
            }
          },
          "required": ["enabled", "trigger"],
          "type": "object"
        },
        "timeSkip": {
          "additionalProperties": false,
          "description": "Skip through time.",
          "properties": {
            "enabled": {
              "description": "Should time skipping be enabled?",
              "type": "boolean"
            },
            "trigger": {
              "description": "Amount of time crystals we need to have available.",
              "maximum": 9007199254740991,
              "minimum": -1,
              "type": "number"
            },
            "max": {
              "description": "How many years to skip at most.",
              "type": "number"
            },
            "cycles": {
              "additionalProperties": false,
              "description": "The cycles during which to skip.",
              "properties": {
                "charon": { "$ref": "#/$defs/time-skip-cycle" },
                "umbra": { "$ref": "#/$defs/time-skip-cycle" },
                "yarn": { "$ref": "#/$defs/time-skip-cycle" },
                "helios": { "$ref": "#/$defs/time-skip-cycle" },
                "cath": { "$ref": "#/$defs/time-skip-cycle" },
                "redmoon": { "$ref": "#/$defs/time-skip-cycle" },
                "dune": { "$ref": "#/$defs/time-skip-cycle" },
                "piscine": { "$ref": "#/$defs/time-skip-cycle" },
                "terminus": { "$ref": "#/$defs/time-skip-cycle" },
                "kairo": { "$ref": "#/$defs/time-skip-cycle" }
              },
              "required": [
                "charon",
                "umbra",
                "yarn",
                "helios",
                "cath",
                "redmoon",
                "dune",
                "piscine",
                "terminus",
                "kairo"
              ],
              "type": "object"
            },
            "seasons": {
              "additionalProperties": false,
              "description": "The seasons during which to skip.",
              "properties": {
                "spring": { "$ref": "#/$defs/time-skip-season" },
                "summer": { "$ref": "#/$defs/time-skip-season" },
                "autumn": { "$ref": "#/$defs/time-skip-season" },
                "winter": { "$ref": "#/$defs/time-skip-season" }
              },
              "required": ["spring", "summer", "autumn", "winter"],
              "type": "object"
            },
            "ignoreOverheat": {
              "additionalProperties": false,
              "description": "Handle overheating from time skips.",
              "properties": {
                "enabled": {
                  "description": "Should we ignore overheating and just skip as much as configured?",
                  "type": "boolean"
                }
              },
              "required": ["enabled"],
              "type": "object"
            }
          },
          "required": ["enabled", "trigger", "max", "cycles", "seasons", "ignoreOverheat"],
          "type": "object"
        },
        "reset": {
          "additionalProperties": false,
          "description": "Reset the game.",
          "properties": {
            "enabled": {
              "description": "Should reset automation be enabled?",
              "type": "boolean"
            },
            "bonfire": {
              "additionalProperties": false,
              "description": "Bonfire requirements.",
              "properties": {
                "enabled": {
                  "description": "Ignored, as reset sub-sections are always enabled.",
                  "type": "boolean"
                },
                "buildings": {
                  "additionalProperties": false,
                  "description": "The bonfire buildings that must be built for a reset to be possible.",
                  "properties": {
                    "academy": { "$ref": "#/$defs/reset-building" },
                    "accelerator": { "$ref": "#/$defs/reset-building" },
                    "aiCore": { "$ref": "#/$defs/reset-building" },
                    "amphitheatre": { "$ref": "#/$defs/reset-building" },
                    "aqueduct": { "$ref": "#/$defs/reset-building" },
                    "barn": { "$ref": "#/$defs/reset-building" },
                    "biolab": { "$ref": "#/$defs/reset-building" },
                    "brewery": { "$ref": "#/$defs/reset-building" },
                    "broadcasttower": { "$ref": "#/$defs/reset-building" },
                    "calciner": { "$ref": "#/$defs/reset-building" },
                    "chapel": { "$ref": "#/$defs/reset-building" },
                    "chronosphere": { "$ref": "#/$defs/reset-building" },
                    "dataCenter": { "$ref": "#/$defs/reset-building" },
                    "factory": { "$ref": "#/$defs/reset-building" },
                    "field": { "$ref": "#/$defs/reset-building" },
                    "harbor": { "$ref": "#/$defs/reset-building" },
                    "hut": { "$ref": "#/$defs/reset-building" },
                    "hydroplant": { "$ref": "#/$defs/reset-building" },
                    "library": { "$ref": "#/$defs/reset-building" },
                    "logHouse": { "$ref": "#/$defs/reset-building" },
                    "lumberMill": { "$ref": "#/$defs/reset-building" },
                    "magneto": { "$ref": "#/$defs/reset-building" },
                    "mansion": { "$ref": "#/$defs/reset-building" },
                    "mine": { "$ref": "#/$defs/reset-building" },
                    "mint": { "$ref": "#/$defs/reset-building" },
                    "observatory": { "$ref": "#/$defs/reset-building" },
                    "oilWell": { "$ref": "#/$defs/reset-building" },
                    "pasture": { "$ref": "#/$defs/reset-building" },
                    "quarry": { "$ref": "#/$defs/reset-building" },
                    "reactor": { "$ref": "#/$defs/reset-building" },
                    "smelter": { "$ref": "#/$defs/reset-building" },
                    "solarfarm": { "$ref": "#/$defs/reset-building" },
                    "spaceport": { "$ref": "#/$defs/reset-building" },
                    "steamworks": { "$ref": "#/$defs/reset-building" },
                    "temple": { "$ref": "#/$defs/reset-building" },
                    "tradepost": { "$ref": "#/$defs/reset-building" },
                    "warehouse": { "$ref": "#/$defs/reset-building" },
                    "workshop": { "$ref": "#/$defs/reset-building" },
                    "zebraForge": { "$ref": "#/$defs/reset-building" },
                    "zebraOutpost": { "$ref": "#/$defs/reset-building" },
                    "zebraWorkshop": { "$ref": "#/$defs/reset-building" },
                    "ziggurat": { "$ref": "#/$defs/reset-building" }
                  },
                  "required": [
                    "academy",
                    "accelerator",
                    "aiCore",
                    "amphitheatre",
                    "aqueduct",
                    "barn",
                    "biolab",
                    "brewery",
                    "broadcasttower",
                    "calciner",
                    "chapel",
                    "chronosphere",
                    "dataCenter",
                    "factory",
                    "field",
                    "harbor",
                    "hut",
                    "hydroplant",
                    "library",
                    "logHouse",
                    "lumberMill",
                    "magneto",
                    "mansion",
                    "mine",
                    "mint",
                    "observatory",
                    "oilWell",
                    "pasture",
                    "quarry",
                    "reactor",
                    "smelter",
                    "solarfarm",
                    "spaceport",
                    "steamworks",
                    "temple",
                    "tradepost",
                    "warehouse",
                    "workshop",
                    "zebraForge",
                    "zebraOutpost",
                    "zebraWorkshop",
                    "ziggurat"
                  ],
                  "type": "object"
                }
              },
              "required": ["enabled", "buildings"],
              "type": "object"
            },
            "religion": {
              "additionalProperties": false,
              "description": "Religion requirements.",
              "properties": {
                "enabled": {
                  "description": "Ignored, as reset sub-sections are always enabled.",
                  "type": "boolean"
                },
                "buildings": {
                  "additionalProperties": false,
                  "description": "The religion buildings that must be built for a reset to be possible.",
                  "properties": {
                    "apocripha": { "$ref": "#/$defs/reset-building" },
                    "basilica": { "$ref": "#/$defs/reset-building" },
                    "blackCore": { "$ref": "#/$defs/reset-building" },
                    "blackLibrary": { "$ref": "#/$defs/reset-building" },
                    "blackNexus": { "$ref": "#/$defs/reset-building" },
                    "blackObelisk": { "$ref": "#/$defs/reset-building" },
                    "blackPyramid": { "$ref": "#/$defs/reset-building" },
                    "blackRadiance": { "$ref": "#/$defs/reset-building" },
                    "blazar": { "$ref": "#/$defs/reset-building" },
                    "darkNova": { "$ref": "#/$defs/reset-building" },
                    "goldenSpire": { "$ref": "#/$defs/reset-building" },
                    "holyGenocide": { "$ref": "#/$defs/reset-building" },
                    "ivoryCitadel": { "$ref": "#/$defs/reset-building" },
                    "ivoryTower": { "$ref": "#/$defs/reset-building" },
                    "marker": { "$ref": "#/$defs/reset-building" },
                    "scholasticism": { "$ref": "#/$defs/reset-building" },
                    "singularity": { "$ref": "#/$defs/reset-building" },
                    "skyPalace": { "$ref": "#/$defs/reset-building" },
                    "solarchant": { "$ref": "#/$defs/reset-building" },
                    "solarRevolution": { "$ref": "#/$defs/reset-building" },
                    "stainedGlass": { "$ref": "#/$defs/reset-building" },
                    "sunAltar": { "$ref": "#/$defs/reset-building" },
                    "sunspire": { "$ref": "#/$defs/reset-building" },
                    "templars": { "$ref": "#/$defs/reset-building" },
                    "transcendence": { "$ref": "#/$defs/reset-building" },
                    "unicornGraveyard": { "$ref": "#/$defs/reset-building" },
                    "unicornNecropolis": { "$ref": "#/$defs/reset-building" },
                    "unicornPasture": { "$ref": "#/$defs/reset-building" },
                    "unicornTomb": { "$ref": "#/$defs/reset-building" },
                    "unicornUtopia": { "$ref": "#/$defs/reset-building" }
                  },
                  "required": [
                    "apocripha",
                    "basilica",
                    "blackCore",
                    "blackLibrary",
                    "blackNexus",
                    "blackObelisk",
                    "blackPyramid",
                    "blackRadiance",
                    "blazar",
                    "darkNova",
                    "goldenSpire",
                    "holyGenocide",
                    "ivoryCitadel",
                    "ivoryTower",
                    "marker",
                    "scholasticism",
                    "singularity",
                    "skyPalace",
                    "solarchant",
                    "solarRevolution",
                    "stainedGlass",
                    "sunAltar",
                    "sunspire",
                    "templars",
                    "transcendence",
                    "unicornGraveyard",
                    "unicornNecropolis",
                    "unicornPasture",
                    "unicornTomb",
                    "unicornUtopia"
                  ],
                  "type": "object"
                }
              },
              "required": ["enabled", "buildings"],
              "type": "object"
            },
            "resources": {
              "additionalProperties": false,
              "description": "Resource requirements.",
              "properties": {
                "enabled": {
                  "description": "Ignored, as reset sub-sections are always enabled.",
                  "type": "boolean"
                },
                "resources": {
                  "additionalProperties": false,
                  "description": "The resources we need to have in stock for a reset to be possible.",
                  "properties": {
                    "alicorn": { "$ref": "#/$defs/reset-resource" },
                    "alloy": { "$ref": "#/$defs/reset-resource" },
                    "antimatter": { "$ref": "#/$defs/reset-resource" },
                    "beam": { "$ref": "#/$defs/reset-resource" },
                    "blackcoin": { "$ref": "#/$defs/reset-resource" },
                    "bloodstone": { "$ref": "#/$defs/reset-resource" },
                    "blueprint": { "$ref": "#/$defs/reset-resource" },
                    "burnedParagon": { "$ref": "#/$defs/reset-resource" },
                    "catnip": { "$ref": "#/$defs/reset-resource" },
                    "coal": { "$ref": "#/$defs/reset-resource" },
                    "compedium": { "$ref": "#/$defs/reset-resource" },
                    "concrate": { "$ref": "#/$defs/reset-resource" },
                    "culture": { "$ref": "#/$defs/reset-resource" },
                    "elderBox": { "$ref": "#/$defs/reset-resource" },
                    "eludium": { "$ref": "#/$defs/reset-resource" },
                    "faith": { "$ref": "#/$defs/reset-resource" },
                    "furs": { "$ref": "#/$defs/reset-resource" },
                    "gear": { "$ref": "#/$defs/reset-resource" },
                    "gold": { "$ref": "#/$defs/reset-resource" },
                    "gflops": { "$ref": "#/$defs/reset-resource" },
                    "hashrates": { "$ref": "#/$defs/reset-resource" },
                    "iron": { "$ref": "#/$defs/reset-resource" },
                    "ivory": { "$ref": "#/$defs/reset-resource" },
                    "karma": { "$ref": "#/$defs/reset-resource" },
                    "kerosene": { "$ref": "#/$defs/reset-resource" },
                    "kittens": { "$ref": "#/$defs/reset-resource" },
                    "manpower": { "$ref": "#/$defs/reset-resource" },
                    "manuscript": { "$ref": "#/$defs/reset-resource" },
                    "megalith": { "$ref": "#/$defs/reset-resource" },
                    "minerals": { "$ref": "#/$defs/reset-resource" },
                    "necrocorn": { "$ref": "#/$defs/reset-resource" },
                    "oil": { "$ref": "#/$defs/reset-resource" },
                    "paragon": { "$ref": "#/$defs/reset-resource" },
                    "parchment": { "$ref": "#/$defs/reset-resource" },
                    "plate": { "$ref": "#/$defs/reset-resource" },
                    "relic": { "$ref": "#/$defs/reset-resource" },
                    "scaffold": { "$ref": "#/$defs/reset-resource" },
                    "science": { "$ref": "#/$defs/reset-resource" },
                    "ship": { "$ref": "#/$defs/reset-resource" },
                    "slab": { "$ref": "#/$defs/reset-resource" },
                    "sorrow": { "$ref": "#/$defs/reset-resource" },
                    "spice": { "$ref": "#/$defs/reset-resource" },
                    "starchart": { "$ref": "#/$defs/reset-resource" },
                    "steel": { "$ref": "#/$defs/reset-resource" },
                    "tanker": { "$ref": "#/$defs/reset-resource" },
                    "tears": { "$ref": "#/$defs/reset-resource" },
                    "temporalFlux": { "$ref": "#/$defs/reset-resource" },
                    "thorium": { "$ref": "#/$defs/reset-resource" },
                    "timeCrystal": { "$ref": "#/$defs/reset-resource" },
                    "tMythril": { "$ref": "#/$defs/reset-resource" },
                    "titanium": { "$ref": "#/$defs/reset-resource" },
                    "unicorns": { "$ref": "#/$defs/reset-resource" },
                    "unobtainium": { "$ref": "#/$defs/reset-resource" },
                    "uranium": { "$ref": "#/$defs/reset-resource" },
                    "void": { "$ref": "#/$defs/reset-resource" },
                    "wood": { "$ref": "#/$defs/reset-resource" },
                    "wrappingPaper": { "$ref": "#/$defs/reset-resource" },
                    "zebras": { "$ref": "#/$defs/reset-resource" }
                  },
                  "required": [
                    "alicorn",
                    "alloy",
                    "antimatter",
                    "beam",
                    "blackcoin",
                    "bloodstone",
                    "blueprint",
                    "burnedParagon",
                    "catnip",
                    "coal",
                    "compedium",
                    "concrate",
                    "culture",
                    "elderBox",
                    "eludium",
                    "faith",
                    "furs",
                    "gear",
                    "gold",
                    "gflops",
                    "hashrates",
                    "iron",
                    "ivory",
                    "karma",
                    "kerosene",
                    "kittens",
                    "manpower",
                    "manuscript",
                    "megalith",
                    "minerals",
                    "necrocorn",
                    "oil",
                    "paragon",
                    "parchment",
                    "plate",
                    "relic",
                    "scaffold",
                    "science",
                    "ship",
                    "slab",
                    "sorrow",
                    "spice",
                    "starchart",
                    "steel",
                    "tanker",
                    "tears",
                    "temporalFlux",
                    "thorium",
                    "timeCrystal",
                    "tMythril",
                    "titanium",
                    "unicorns",
                    "unobtainium",
                    "uranium",
                    "void",
                    "wood",
                    "wrappingPaper",
                    "zebras"
                  ],
                  "type": "object"
                }
              },
              "required": ["enabled", "resources"],
              "type": "object"
            },
            "space": {
              "additionalProperties": false,
              "description": "Space requirements.",
              "properties": {
                "enabled": {
                  "description": "Ignored, as reset sub-sections are always enabled.",
                  "type": "boolean"
                },
                "buildings": {
                  "additionalProperties": false,
                  "description": "The space buildings that must be built for a reset to be possible.",
                  "properties": {
                    "containmentChamber": { "$ref": "#/$defs/reset-building" },
                    "cryostation": { "$ref": "#/$defs/reset-building" },
                    "entangler": { "$ref": "#/$defs/reset-building" },
                    "heatsink": { "$ref": "#/$defs/reset-building" },
                    "hrHarvester": { "$ref": "#/$defs/reset-building" },
                    "hydrofracturer": { "$ref": "#/$defs/reset-building" },
                    "hydroponics": { "$ref": "#/$defs/reset-building" },
                    "moltenCore": { "$ref": "#/$defs/reset-building" },
                    "moonBase": { "$ref": "#/$defs/reset-building" },
                    "moonOutpost": { "$ref": "#/$defs/reset-building" },
                    "orbitalArray": { "$ref": "#/$defs/reset-building" },
                    "planetCracker": { "$ref": "#/$defs/reset-building" },
                    "researchVessel": { "$ref": "#/$defs/reset-building" },
                    "sattelite": { "$ref": "#/$defs/reset-building" },
                    "spaceBeacon": { "$ref": "#/$defs/reset-building" },
                    "spaceElevator": { "$ref": "#/$defs/reset-building" },
                    "spaceStation": { "$ref": "#/$defs/reset-building" },
                    "spiceRefinery": { "$ref": "#/$defs/reset-building" },
                    "sunforge": { "$ref": "#/$defs/reset-building" },
                    "sunlifter": { "$ref": "#/$defs/reset-building" },
                    "tectonic": { "$ref": "#/$defs/reset-building" },
                    "terraformingStation": { "$ref": "#/$defs/reset-building" }
                  },
                  "required": [
                    "containmentChamber",
                    "cryostation",
                    "entangler",
                    "heatsink",
                    "hrHarvester",
                    "hydrofracturer",
                    "hydroponics",
                    "moltenCore",
                    "moonBase",
                    "moonOutpost",
                    "orbitalArray",
                    "planetCracker",
                    "researchVessel",
                    "sattelite",
                    "spaceBeacon",
                    "spaceElevator",
                    "spaceStation",
                    "spiceRefinery",
                    "sunforge",
                    "sunlifter",
                    "tectonic",
                    "terraformingStation"
                  ],
                  "type": "object"
                }
              },
              "required": ["enabled", "buildings"],
              "type": "object"
            },
            "time": {
              "additionalProperties": false,
              "description": "Time requirements.",
              "properties": {
                "enabled": {
                  "description": "Ignored, as reset sub-sections are always enabled.",
                  "type": "boolean"
                },
                "buildings": {
                  "additionalProperties": false,
                  "description": "The time buildings that must be built for a reset to be possible.",
                  "properties": {
                    "blastFurnace": { "$ref": "#/$defs/reset-building" },
                    "chronocontrol": { "$ref": "#/$defs/reset-building" },
                    "cryochambers": { "$ref": "#/$defs/reset-building" },
                    "ressourceRetrieval": { "$ref": "#/$defs/reset-building" },
                    "temporalAccelerator": { "$ref": "#/$defs/reset-building" },
                    "temporalBattery": { "$ref": "#/$defs/reset-building" },
                    "temporalImpedance": { "$ref": "#/$defs/reset-building" },
                    "temporalPress": { "$ref": "#/$defs/reset-building" },
                    "timeBoiler": { "$ref": "#/$defs/reset-building" },
                    "voidHoover": { "$ref": "#/$defs/reset-building" },
                    "voidResonator": { "$ref": "#/$defs/reset-building" },
                    "voidRift": { "$ref": "#/$defs/reset-building" }
                  },
                  "required": [
                    "blastFurnace",
                    "chronocontrol",
                    "cryochambers",
                    "ressourceRetrieval",
                    "temporalAccelerator",
                    "temporalBattery",
                    "temporalImpedance",
                    "temporalPress",
                    "timeBoiler",
                    "voidHoover",
                    "voidResonator",
                    "voidRift"
                  ],
                  "type": "object"
                }
              },
              "required": ["enabled", "buildings"],
              "type": "object"
            },
            "upgrades": {
              "additionalProperties": false,
              "description": "Upgrade requirements.",
              "properties": {
                "enabled": {
                  "description": "Ignored, as reset sub-sections are always enabled.",
                  "type": "boolean"
                },
                "upgrades": {
                  "additionalProperties": false,
                  "description": "The upgrades we must have researched for a reset to be possible.",
                  "properties": {
                    "advancedAutomation": { "$ref": "#/$defs/reset-upgrade" },
                    "advancedRefinement": { "$ref": "#/$defs/reset-upgrade" },
                    "aiBases": { "$ref": "#/$defs/reset-upgrade" },
                    "aiEngineers": { "$ref": "#/$defs/reset-upgrade" },
                    "alloyArmor": { "$ref": "#/$defs/reset-upgrade" },
                    "alloyAxe": { "$ref": "#/$defs/reset-upgrade" },
                    "alloyBarns": { "$ref": "#/$defs/reset-upgrade" },
                    "alloySaw": { "$ref": "#/$defs/reset-upgrade" },
                    "alloyWarehouses": { "$ref": "#/$defs/reset-upgrade" },
                    "amBases": { "$ref": "#/$defs/reset-upgrade" },
                    "amDrive": { "$ref": "#/$defs/reset-upgrade" },
                    "amFission": { "$ref": "#/$defs/reset-upgrade" },
                    "amReactors": { "$ref": "#/$defs/reset-upgrade" },
                    "amReactorsMK2": { "$ref": "#/$defs/reset-upgrade" },
                    "assistance": { "$ref": "#/$defs/reset-upgrade" },
                    "astrolabe": { "$ref": "#/$defs/reset-upgrade" },
                    "astrophysicists": { "$ref": "#/$defs/reset-upgrade" },
                    "augumentation": { "$ref": "#/$defs/reset-upgrade" },
                    "automatedPlants": { "$ref": "#/$defs/reset-upgrade" },
                    "barges": { "$ref": "#/$defs/reset-upgrade" },
                    "biofuel": { "$ref": "#/$defs/reset-upgrade" },
                    "bolas": { "$ref": "#/$defs/reset-upgrade" },
                    "cadSystems": { "$ref": "#/$defs/reset-upgrade" },
                    "caravanserai": { "$ref": "#/$defs/reset-upgrade" },
                    "carbonSequestration": { "$ref": "#/$defs/reset-upgrade" },
                    "cargoShips": { "$ref": "#/$defs/reset-upgrade" },
                    "celestialMechanics": { "$ref": "#/$defs/reset-upgrade" },
                    "chronoEngineers": { "$ref": "#/$defs/reset-upgrade" },
                    "chronoforge": { "$ref": "#/$defs/reset-upgrade" },
                    "coalFurnace": { "$ref": "#/$defs/reset-upgrade" },
                    "coldFusion": { "$ref": "#/$defs/reset-upgrade" },
                    "combustionEngine": { "$ref": "#/$defs/reset-upgrade" },
                    "compositeBow": { "$ref": "#/$defs/reset-upgrade" },
                    "concreteBarns": { "$ref": "#/$defs/reset-upgrade" },
                    "concreteHuts": { "$ref": "#/$defs/reset-upgrade" },
                    "concreteWarehouses": { "$ref": "#/$defs/reset-upgrade" },
                    "crossbow": { "$ref": "#/$defs/reset-upgrade" },
                    "cryocomputing": { "$ref": "#/$defs/reset-upgrade" },
                    "darkEnergy": { "$ref": "#/$defs/reset-upgrade" },
                    "deepMining": { "$ref": "#/$defs/reset-upgrade" },
                    "distorsion": { "$ref": "#/$defs/reset-upgrade" },
                    "electrolyticSmelting": { "$ref": "#/$defs/reset-upgrade" },
                    "eludiumCracker": { "$ref": "#/$defs/reset-upgrade" },
                    "eludiumHuts": { "$ref": "#/$defs/reset-upgrade" },
                    "eludiumReflectors": { "$ref": "#/$defs/reset-upgrade" },
                    "energyRifts": { "$ref": "#/$defs/reset-upgrade" },
                    "enrichedThorium": { "$ref": "#/$defs/reset-upgrade" },
                    "enrichedUranium": { "$ref": "#/$defs/reset-upgrade" },
                    "factoryAutomation": { "$ref": "#/$defs/reset-upgrade" },
                    "factoryLogistics": { "$ref": "#/$defs/reset-upgrade" },
                    "factoryOptimization": { "$ref": "#/$defs/reset-upgrade" },
                    "factoryProcessing": { "$ref": "#/$defs/reset-upgrade" },
                    "factoryRobotics": { "$ref": "#/$defs/reset-upgrade" },
                    "fluidizedReactors": { "$ref": "#/$defs/reset-upgrade" },
                    "fluxCondensator": { "$ref": "#/$defs/reset-upgrade" },
                    "fuelInjectors": { "$ref": "#/$defs/reset-upgrade" },
                    "geodesy": { "$ref": "#/$defs/reset-upgrade" },
                    "gmo": { "$ref": "#/$defs/reset-upgrade" },
                    "goldOre": { "$ref": "#/$defs/reset-upgrade" },
                    "hubbleTelescope": { "$ref": "#/$defs/reset-upgrade" },
                    "huntingArmor": { "$ref": "#/$defs/reset-upgrade" },
                    "hydroPlantTurbines": { "$ref": "#/$defs/reset-upgrade" },
                    "internet": { "$ref": "#/$defs/reset-upgrade" },
                    "invisibleBlackHand": { "$ref": "#/$defs/reset-upgrade" },
                    "ironAxes": { "$ref": "#/$defs/reset-upgrade" },
                    "ironHoes": { "$ref": "#/$defs/reset-upgrade" },
                    "ironwood": { "$ref": "#/$defs/reset-upgrade" },
                    "lhc": { "$ref": "#/$defs/reset-upgrade" },
                    "logistics": { "$ref": "#/$defs/reset-upgrade" },
                    "longRangeSpaceships": { "$ref": "#/$defs/reset-upgrade" },
                    "machineLearning": { "$ref": "#/$defs/reset-upgrade" },
                    "mineralAxes": { "$ref": "#/$defs/reset-upgrade" },
                    "mineralHoes": { "$ref": "#/$defs/reset-upgrade" },
                    "miningDrill": { "$ref": "#/$defs/reset-upgrade" },
                    "mWReactor": { "$ref": "#/$defs/reset-upgrade" },
                    "nanosuits": { "$ref": "#/$defs/reset-upgrade" },
                    "neuralNetworks": { "$ref": "#/$defs/reset-upgrade" },
                    "nuclearPlants": { "$ref": "#/$defs/reset-upgrade" },
                    "nuclearSmelters": { "$ref": "#/$defs/reset-upgrade" },
                    "offsetPress": { "$ref": "#/$defs/reset-upgrade" },
                    "oilDistillation": { "$ref": "#/$defs/reset-upgrade" },
                    "oilRefinery": { "$ref": "#/$defs/reset-upgrade" },
                    "orbitalGeodesy": { "$ref": "#/$defs/reset-upgrade" },
                    "oxidation": { "$ref": "#/$defs/reset-upgrade" },
                    "photolithography": { "$ref": "#/$defs/reset-upgrade" },
                    "photovoltaic": { "$ref": "#/$defs/reset-upgrade" },
                    "pneumaticPress": { "$ref": "#/$defs/reset-upgrade" },
                    "printingPress": { "$ref": "#/$defs/reset-upgrade" },
                    "pumpjack": { "$ref": "#/$defs/reset-upgrade" },
                    "pyrolysis": { "$ref": "#/$defs/reset-upgrade" },
                    "qdot": { "$ref": "#/$defs/reset-upgrade" },
                    "railgun": { "$ref": "#/$defs/reset-upgrade" },
                    "reactorVessel": { "$ref": "#/$defs/reset-upgrade" },
                    "refrigeration": { "$ref": "#/$defs/reset-upgrade" },
                    "register": { "$ref": "#/$defs/reset-upgrade" },
                    "reinforcedBarns": { "$ref": "#/$defs/reset-upgrade" },
                    "reinforcedSaw": { "$ref": "#/$defs/reset-upgrade" },
                    "reinforcedWarehouses": { "$ref": "#/$defs/reset-upgrade" },
                    "relicStation": { "$ref": "#/$defs/reset-upgrade" },
                    "rotaryKiln": { "$ref": "#/$defs/reset-upgrade" },
                    "satelliteRadio": { "$ref": "#/$defs/reset-upgrade" },
                    "satnav": { "$ref": "#/$defs/reset-upgrade" },
                    "seti": { "$ref": "#/$defs/reset-upgrade" },
                    "silos": { "$ref": "#/$defs/reset-upgrade" },
                    "solarSatellites": { "$ref": "#/$defs/reset-upgrade" },
                    "spaceEngineers": { "$ref": "#/$defs/reset-upgrade" },
                    "spaceManufacturing": { "$ref": "#/$defs/reset-upgrade" },
                    "spiceNavigation": { "$ref": "#/$defs/reset-upgrade" },
                    "starlink": { "$ref": "#/$defs/reset-upgrade" },
                    "stasisChambers": { "$ref": "#/$defs/reset-upgrade" },
                    "steelArmor": { "$ref": "#/$defs/reset-upgrade" },
                    "steelAxe": { "$ref": "#/$defs/reset-upgrade" },
                    "steelPlants": { "$ref": "#/$defs/reset-upgrade" },
                    "steelSaw": { "$ref": "#/$defs/reset-upgrade" },
                    "stoneBarns": { "$ref": "#/$defs/reset-upgrade" },
                    "storageBunkers": { "$ref": "#/$defs/reset-upgrade" },
                    "strenghtenBuild": { "$ref": "#/$defs/reset-upgrade" },
                    "tachyonAccelerators": { "$ref": "#/$defs/reset-upgrade" },
                    "thinFilm": { "$ref": "#/$defs/reset-upgrade" },
                    "thoriumEngine": { "$ref": "#/$defs/reset-upgrade" },
                    "thoriumReactors": { "$ref": "#/$defs/reset-upgrade" },
                    "titaniumAxe": { "$ref": "#/$defs/reset-upgrade" },
                    "titaniumBarns": { "$ref": "#/$defs/reset-upgrade" },
                    "titaniumMirrors": { "$ref": "#/$defs/reset-upgrade" },
                    "titaniumSaw": { "$ref": "#/$defs/reset-upgrade" },
                    "titaniumWarehouses": { "$ref": "#/$defs/reset-upgrade" },
                    "turnSmoothly": { "$ref": "#/$defs/reset-upgrade" },
                    "unicornSelection": { "$ref": "#/$defs/reset-upgrade" },
                    "unobtainiumAxe": { "$ref": "#/$defs/reset-upgrade" },
                    "unobtainiumDrill": { "$ref": "#/$defs/reset-upgrade" },
                    "unobtainiumHuts": { "$ref": "#/$defs/reset-upgrade" },
                    "unobtainiumReflectors": { "$ref": "#/$defs/reset-upgrade" },
                    "unobtainiumSaw": { "$ref": "#/$defs/reset-upgrade" },
                    "uplink": { "$ref": "#/$defs/reset-upgrade" },
                    "voidAspiration": { "$ref": "#/$defs/reset-upgrade" },
                    "voidEnergy": { "$ref": "#/$defs/reset-upgrade" },
                    "voidReactors": { "$ref": "#/$defs/reset-upgrade" }
                  },
                  "required": [
                    "advancedAutomation",
                    "advancedRefinement",
                    "aiBases",
                    "aiEngineers",
                    "alloyArmor",
                    "alloyAxe",
                    "alloyBarns",
                    "alloySaw",
                    "alloyWarehouses",
                    "amBases",
                    "amDrive",
                    "amFission",
                    "amReactors",
                    "amReactorsMK2",
                    "assistance",
                    "astrolabe",
                    "astrophysicists",
                    "augumentation",
                    "automatedPlants",
                    "barges",
                    "biofuel",
                    "bolas",
                    "cadSystems",
                    "caravanserai",
                    "carbonSequestration",
                    "cargoShips",
                    "celestialMechanics",
                    "chronoEngineers",
                    "chronoforge",
                    "coalFurnace",
                    "coldFusion",
                    "combustionEngine",
                    "compositeBow",
                    "concreteBarns",
                    "concreteHuts",
                    "concreteWarehouses",
                    "crossbow",
                    "cryocomputing",
                    "darkEnergy",
                    "deepMining",
                    "distorsion",
                    "electrolyticSmelting",
                    "eludiumCracker",
                    "eludiumHuts",
                    "eludiumReflectors",
                    "energyRifts",
                    "enrichedThorium",
                    "enrichedUranium",
                    "factoryAutomation",
                    "factoryLogistics",
                    "factoryOptimization",
                    "factoryProcessing",
                    "factoryRobotics",
                    "fluidizedReactors",
                    "fluxCondensator",
                    "fuelInjectors",
                    "geodesy",
                    "gmo",
                    "goldOre",
                    "hubbleTelescope",
                    "huntingArmor",
                    "hydroPlantTurbines",
                    "internet",
                    "invisibleBlackHand",
                    "ironAxes",
                    "ironHoes",
                    "ironwood",
                    "lhc",
                    "logistics",
                    "longRangeSpaceships",
                    "machineLearning",
                    "mineralAxes",
                    "mineralHoes",
                    "miningDrill",
                    "mWReactor",
                    "nanosuits",
                    "neuralNetworks",
                    "nuclearPlants",
                    "nuclearSmelters",
                    "offsetPress",
                    "oilDistillation",
                    "oilRefinery",
                    "orbitalGeodesy",
                    "oxidation",
                    "photolithography",
                    "photovoltaic",
                    "pneumaticPress",
                    "printingPress",
                    "pumpjack",
                    "pyrolysis",
                    "qdot",
                    "railgun",
                    "reactorVessel",
                    "refrigeration",
                    "register",
                    "reinforcedBarns",
                    "reinforcedSaw",
                    "reinforcedWarehouses",
                    "relicStation",
                    "rotaryKiln",
                    "satelliteRadio",
                    "satnav",
                    "seti",
                    "silos",
                    "solarSatellites",
                    "spaceEngineers",
                    "spaceManufacturing",
                    "spiceNavigation",
                    "starlink",
                    "stasisChambers",
                    "steelArmor",
                    "steelAxe",
                    "steelPlants",
                    "steelSaw",
                    "stoneBarns",
                    "storageBunkers",
                    "strenghtenBuild",
                    "tachyonAccelerators",
                    "thinFilm",
                    "thoriumEngine",
                    "thoriumReactors",
                    "titaniumAxe",
                    "titaniumBarns",
                    "titaniumMirrors",
                    "titaniumSaw",
                    "titaniumWarehouses",
                    "turnSmoothly",
                    "unicornSelection",
                    "unobtainiumAxe",
                    "unobtainiumDrill",
                    "unobtainiumHuts",
                    "unobtainiumReflectors",
                    "unobtainiumSaw",
                    "uplink",
                    "voidAspiration",
                    "voidEnergy",
                    "voidReactors"
                  ],
                  "type": "object"
                }
              },
              "required": ["enabled", "upgrades"],
              "type": "object"
            }
          },
          "required": ["enabled", "bonfire", "religion", "resources", "space", "time", "upgrades"],
          "type": "object"
        }
      },
      "required": ["enabled", "accelerateTime", "timeSkip", "reset"],
      "type": "object"
    },
    "time": {
      "additionalProperties": false,
      "description": "Features relating to the Time tab.",
      "properties": {
        "enabled": {
          "description": "Is the time automation enabled?",
          "type": "boolean"
        },
        "trigger": {
          "description": "What's the trigger value for this automation?",
          "maximum": 1,
          "minimum": 0,
          "type": "number"
        },
        "buildings": {
          "additionalProperties": false,
          "description": "Configuration for which buildings to build automatically.",
          "properties": {
            "blastFurnace": { "$ref": "#/$defs/building-time" },
            "chronocontrol": { "$ref": "#/$defs/building-time" },
            "cryochambers": { "$ref": "#/$defs/building-time" },
            "ressourceRetrieval": { "$ref": "#/$defs/building-time" },
            "temporalAccelerator": { "$ref": "#/$defs/building-time" },
            "temporalBattery": { "$ref": "#/$defs/building-time" },
            "temporalImpedance": { "$ref": "#/$defs/building-time" },
            "temporalPress": { "$ref": "#/$defs/building-time" },
            "timeBoiler": { "$ref": "#/$defs/building-time" },
            "voidHoover": { "$ref": "#/$defs/building-time" },
            "voidResonator": { "$ref": "#/$defs/building-time" },
            "voidRift": { "$ref": "#/$defs/building-time" }
          },
          "required": [
            "blastFurnace",
            "chronocontrol",
            "cryochambers",
            "ressourceRetrieval",
            "temporalAccelerator",
            "temporalBattery",
            "temporalImpedance",
            "temporalPress",
            "timeBoiler",
            "voidHoover",
            "voidResonator",
            "voidRift"
          ],
          "type": "object"
        },
        "fixCryochambers": {
          "additionalProperties": false,
          "description": "Cryochambers",
          "properties": {
            "enabled": {
              "description": "Should cryochambers be fixed automatically?",
              "type": "boolean"
            }
          },
          "required": ["enabled"],
          "type": "object"
        },
        "turnOnChronoFurnace": {
          "additionalProperties": false,
          "description": "Chrono Furnace",
          "properties": {
            "enabled": {
              "description": "Should chrono furnaces be turned on automatically?",
              "type": "boolean"
            }
          },
          "required": ["enabled"],
          "type": "object"
        }
      },
      "required": ["enabled", "trigger", "buildings", "fixCryochambers", "turnOnChronoFurnace"],
      "type": "object"
    },
    "trade": {
      "additionalProperties": false,
      "description": "Features relating to the Trade tab.",
      "properties": {
        "enabled": {
          "description": "Is the trade automation enabled?",
          "type": "boolean"
        },
        "trigger": {
          "description": "What's the trigger value for this automation?",
          "maximum": 1,
          "minimum": 0,
          "type": "number"
        },
        "races": {
          "additionalProperties": false,
          "description": "Trading",
          "properties": {
            "dragons": { "$ref": "#/$defs/trade-race" },
            "griffins": { "$ref": "#/$defs/trade-race" },
            "nagas": { "$ref": "#/$defs/trade-race" },
            "leviathans": { "$ref": "#/$defs/trade-race" },
            "lizards": { "$ref": "#/$defs/trade-race" },
            "sharks": { "$ref": "#/$defs/trade-race" },
            "spiders": { "$ref": "#/$defs/trade-race" },
            "zebras": { "$ref": "#/$defs/trade-race" }
          },
          "required": [
            "dragons",
            "griffins",
            "nagas",
            "leviathans",
            "lizards",
            "sharks",
            "spiders",
            "zebras"
          ],
          "type": "object"
        },
        "feedLeviathans": {
          "additionalProperties": false,
          "description": "Leviathan Feedin",
          "properties": {
            "enabled": {
              "description": "Should we feed leviathans whenever possible?",
              "type": "boolean"
            }
          },
          "required": ["enabled"],
          "type": "object"
        },
        "buildEmbassies": {
          "additionalProperties": false,
          "description": "Embassies",
          "properties": {
            "enabled": {
              "description": "Should we build embassies?",
              "type": "boolean"
            },
            "trigger": {
              "description": "What's the trigger value for this automation?",
              "maximum": 1,
              "minimum": 0,
              "type": "number"
            },
            "races": {
              "additionalProperties": false,
              "description": "Embassy Settings",
              "properties": {
                "dragons": { "$ref": "#/$defs/trade-embassy" },
                "griffins": { "$ref": "#/$defs/trade-embassy" },
                "leviathans": { "$ref": "#/$defs/trade-embassy" },
                "lizards": { "$ref": "#/$defs/trade-embassy" },
                "nagas": { "$ref": "#/$defs/trade-embassy" },
                "sharks": { "$ref": "#/$defs/trade-embassy" },
                "spiders": { "$ref": "#/$defs/trade-embassy" },
                "zebras": { "$ref": "#/$defs/trade-embassy" }
              },
              "required": [
                "dragons",
                "griffins",
                "leviathans",
                "lizards",
                "nagas",
                "sharks",
                "spiders",
                "zebras"
              ],
              "type": "object"
            }
          },
          "required": ["enabled", "trigger", "races"],
          "type": "object"
        },
        "tradeBlackcoin": {
          "additionalProperties": false,
          "description": "Blackcoin",
          "properties": {
            "enabled": {
              "description": "Should we trade blackcoin?",
              "type": "boolean"
            },
            "trigger": {
              "description": "How many relics should you have to sell?",
              "maximum": 9007199254740991,
              "minimum": -1,
              "type": "number"
            },
            "buy": {
              "description": "Buy starting at this price.",
              "maximum": 9007199254740991,
              "minimum": -1,
              "type": "number"
            },
            "sell": {
              "description": "Sell at this price.",
              "maximum": 9007199254740991,
              "minimum": -1,
              "type": "number"
            }
          },
          "required": ["enabled", "trigger", "buy", "sell"],
          "type": "object"
        },
        "unlockRaces": {
          "additionalProperties": false,
          "description": "Send Explorers",
          "properties": {
            "enabled": {
              "description": "Should we explore new races?",
              "type": "boolean"
            }
          },
          "required": ["enabled"],
          "type": "object"
        }
      },
      "required": [
        "enabled",
        "trigger",
        "races",
        "feedLeviathans",
        "buildEmbassies",
        "tradeBlackcoin",
        "unlockRaces"
      ],
      "type": "object"
    },
    "village": {
      "additionalProperties": false,
      "description": "Features relating to the Village tab.",
      "properties": {
        "enabled": {
          "description": "Is the village automation enabled?",
          "type": "boolean"
        },
        "jobs": {
          "additionalProperties": false,
          "description": "Kitten Job Assignment",
          "properties": {
            "engineer": { "$ref": "#/$defs/village-job" },
            "farmer": { "$ref": "#/$defs/village-job" },
            "geologist": { "$ref": "#/$defs/village-job" },
            "hunter": { "$ref": "#/$defs/village-job" },
            "miner": { "$ref": "#/$defs/village-job" },
            "priest": { "$ref": "#/$defs/village-job" },
            "scholar": { "$ref": "#/$defs/village-job" },
            "woodcutter": { "$ref": "#/$defs/village-job" }
          },
          "required": [
            "engineer",
            "farmer",
            "geologist",
            "hunter",
            "miner",
            "priest",
            "scholar",
            "woodcutter"
          ],
          "type": "object"
        },
        "holdFestivals": {
          "additionalProperties": false,
          "description": "Festivals",
          "properties": {
            "enabled": {
              "description": "Should we hold festivals?",
              "type": "boolean"
            }
          },
          "required": ["enabled"],
          "type": "object"
        },
        "hunt": {
          "additionalProperties": false,
          "description": "Hunting",
          "properties": {
            "enabled": {
              "description": "Should we send hunters on hunts?",
              "type": "boolean"
            },
            "trigger": {
              "description": "Amount of catpower to have available.",
              "maximum": 1,
              "minimum": 0,
              "type": "number"
            }
          },
          "required": ["enabled", "trigger"],
          "type": "object"
        },
        "promoteKittens": {
          "additionalProperties": false,
          "description": "Kitten Promotion",
          "properties": {
            "enabled": {
              "description": "Should we promote kittens?",
              "type": "boolean"
            },
            "trigger": {
              "description": "Promotion resources to have available.",
              "maximum": 1,
              "minimum": 0,
              "type": "number"
            }
          },
          "required": ["enabled", "trigger"],
          "type": "object"
        },
        "promoteLeader": {
          "additionalProperties": false,
          "description": "Leader Promotion",
          "properties": {
            "enabled": {
              "description": "Should we promote our leader?",
              "type": "boolean"
            }
          },
          "required": ["enabled"],
          "type": "object"
        },
        "electLeader": {
          "additionalProperties": false,
          "description": "Leader Election",
          "properties": {
            "enabled": {
              "description": "Should we elect a leader?",
              "type": "boolean"
            },
            "job": {
              "additionalProperties": false,
              "description": "Which job should the leader have?",
              "properties": {
                "selected": {
                  "description": "The job of the leader.",
                  "enum": [
                    "engineer",
                    "farmer",
                    "geologist",
                    "hunter",
                    "miner",
                    "priest",
                    "scholar",
                    "woodcutter"
                  ]
                }
              },
              "required": ["selected"],
              "type": "object"
            },
            "trait": {
              "additionalProperties": false,
              "description": "Which trait should the leader have?",
              "properties": {
                "selected": {
                  "description": "The trait of the leader.",
                  "enum": [
                    "chemist",
                    "engineer",
                    "manager",
                    "metallurgist",
                    "merchant",
                    "none",
                    "scientist",
                    "wise"
                  ]
                }
              },
              "required": ["selected"],
              "type": "object"
            }
          },
          "required": ["enabled", "job", "trait"],
          "type": "object"
        }
      },
      "required": [
        "enabled",
        "jobs",
        "holdFestivals",
        "hunt",
        "promoteKittens",
        "promoteLeader",
        "electLeader"
      ],
      "type": "object"
    },
    "workshop": {
      "additionalProperties": false,
      "description": "Features relating to the Workshop tab.",
      "properties": {
        "enabled": {
          "description": "Is the workshop automation enabled?",
          "type": "boolean"
        },
        "trigger": {
          "description": "What's the trigger value for this automation?",
          "maximum": 1,
          "minimum": 0,
          "type": "number"
        },
        "resources": {
          "additionalProperties": false,
          "description": "Resource crafting settings",
          "properties": {
            "alloy": { "$ref": "#/$defs/workshop-resource" },
            "beam": { "$ref": "#/$defs/workshop-resource" },
            "blueprint": { "$ref": "#/$defs/workshop-resource" },
            "compedium": { "$ref": "#/$defs/workshop-resource" },
            "concrate": { "$ref": "#/$defs/workshop-resource" },
            "eludium": { "$ref": "#/$defs/workshop-resource" },
            "gear": { "$ref": "#/$defs/workshop-resource" },
            "kerosene": { "$ref": "#/$defs/workshop-resource" },
            "manuscript": { "$ref": "#/$defs/workshop-resource" },
            "megalith": { "$ref": "#/$defs/workshop-resource" },
            "parchment": { "$ref": "#/$defs/workshop-resource" },
            "plate": { "$ref": "#/$defs/workshop-resource" },
            "scaffold": { "$ref": "#/$defs/workshop-resource" },
            "ship": { "$ref": "#/$defs/workshop-resource" },
            "slab": { "$ref": "#/$defs/workshop-resource" },
            "steel": { "$ref": "#/$defs/workshop-resource" },
            "tanker": { "$ref": "#/$defs/workshop-resource" },
            "thorium": { "$ref": "#/$defs/workshop-resource" },
            "wood": { "$ref": "#/$defs/workshop-resource" }
          },
          "required": [
            "alloy",
            "beam",
            "blueprint",
            "compedium",
            "concrate",
            "eludium",
            "gear",
            "kerosene",
            "manuscript",
            "megalith",
            "parchment",
            "plate",
            "scaffold",
            "ship",
            "slab",
            "steel",
            "tanker",
            "thorium",
            "wood"
          ],
          "type": "object"
        },
        "shipOverride": {
          "additionalProperties": false,
          "description": "Ship override",
          "properties": {
            "enabled": {
              "description": "Treat ships as unlimited crafting until we have 243?",
              "type": "boolean"
            }
          },
          "required": ["enabled"],
          "type": "object"
        },
        "unlockUpgrades": {
          "additionalProperties": false,
          "description": "Unlock Workshop upgrades",
          "properties": {
            "enabled": {
              "description": "Should we purchase Workshop upgrades?",
              "type": "boolean"
            },
            "upgrades": {
              "additionalProperties": false,
              "description": "Which Workshop upgrades should we purchase?",
              "properties": {
                "advancedAutomation": { "$ref": "#/$defs/workshop-upgrade" },
                "advancedRefinement": { "$ref": "#/$defs/workshop-upgrade" },
                "aiBases": { "$ref": "#/$defs/workshop-upgrade" },
                "aiEngineers": { "$ref": "#/$defs/workshop-upgrade" },
                "alloyArmor": { "$ref": "#/$defs/workshop-upgrade" },
                "alloyAxe": { "$ref": "#/$defs/workshop-upgrade" },
                "alloyBarns": { "$ref": "#/$defs/workshop-upgrade" },
                "alloySaw": { "$ref": "#/$defs/workshop-upgrade" },
                "alloyWarehouses": { "$ref": "#/$defs/workshop-upgrade" },
                "amBases": { "$ref": "#/$defs/workshop-upgrade" },
                "amDrive": { "$ref": "#/$defs/workshop-upgrade" },
                "amFission": { "$ref": "#/$defs/workshop-upgrade" },
                "amReactors": { "$ref": "#/$defs/workshop-upgrade" },
                "amReactorsMK2": { "$ref": "#/$defs/workshop-upgrade" },
                "assistance": { "$ref": "#/$defs/workshop-upgrade" },
                "astrolabe": { "$ref": "#/$defs/workshop-upgrade" },
                "astrophysicists": { "$ref": "#/$defs/workshop-upgrade" },
                "augumentation": { "$ref": "#/$defs/workshop-upgrade" },
                "automatedPlants": { "$ref": "#/$defs/workshop-upgrade" },
                "barges": { "$ref": "#/$defs/workshop-upgrade" },
                "biofuel": { "$ref": "#/$defs/workshop-upgrade" },
                "bolas": { "$ref": "#/$defs/workshop-upgrade" },
                "cadSystems": { "$ref": "#/$defs/workshop-upgrade" },
                "caravanserai": { "$ref": "#/$defs/workshop-upgrade" },
                "carbonSequestration": { "$ref": "#/$defs/workshop-upgrade" },
                "cargoShips": { "$ref": "#/$defs/workshop-upgrade" },
                "celestialMechanics": { "$ref": "#/$defs/workshop-upgrade" },
                "chronoEngineers": { "$ref": "#/$defs/workshop-upgrade" },
                "chronoforge": { "$ref": "#/$defs/workshop-upgrade" },
                "coalFurnace": { "$ref": "#/$defs/workshop-upgrade" },
                "coldFusion": { "$ref": "#/$defs/workshop-upgrade" },
                "combustionEngine": { "$ref": "#/$defs/workshop-upgrade" },
                "compositeBow": { "$ref": "#/$defs/workshop-upgrade" },
                "concreteBarns": { "$ref": "#/$defs/workshop-upgrade" },
                "concreteHuts": { "$ref": "#/$defs/workshop-upgrade" },
                "concreteWarehouses": { "$ref": "#/$defs/workshop-upgrade" },
                "crossbow": { "$ref": "#/$defs/workshop-upgrade" },
                "cryocomputing": { "$ref": "#/$defs/workshop-upgrade" },
                "darkEnergy": { "$ref": "#/$defs/workshop-upgrade" },
                "deepMining": { "$ref": "#/$defs/workshop-upgrade" },
                "distorsion": { "$ref": "#/$defs/workshop-upgrade" },
                "electrolyticSmelting": { "$ref": "#/$defs/workshop-upgrade" },
                "eludiumCracker": { "$ref": "#/$defs/workshop-upgrade" },
                "eludiumHuts": { "$ref": "#/$defs/workshop-upgrade" },
                "eludiumReflectors": { "$ref": "#/$defs/workshop-upgrade" },
                "energyRifts": { "$ref": "#/$defs/workshop-upgrade" },
                "enrichedThorium": { "$ref": "#/$defs/workshop-upgrade" },
                "enrichedUranium": { "$ref": "#/$defs/workshop-upgrade" },
                "factoryAutomation": { "$ref": "#/$defs/workshop-upgrade" },
                "factoryLogistics": { "$ref": "#/$defs/workshop-upgrade" },
                "factoryOptimization": { "$ref": "#/$defs/workshop-upgrade" },
                "factoryProcessing": { "$ref": "#/$defs/workshop-upgrade" },
                "factoryRobotics": { "$ref": "#/$defs/workshop-upgrade" },
                "fluidizedReactors": { "$ref": "#/$defs/workshop-upgrade" },
                "fluxCondensator": { "$ref": "#/$defs/workshop-upgrade" },
                "fuelInjectors": { "$ref": "#/$defs/workshop-upgrade" },
                "geodesy": { "$ref": "#/$defs/workshop-upgrade" },
                "gmo": { "$ref": "#/$defs/workshop-upgrade" },
                "goldOre": { "$ref": "#/$defs/workshop-upgrade" },
                "hubbleTelescope": { "$ref": "#/$defs/workshop-upgrade" },
                "huntingArmor": { "$ref": "#/$defs/workshop-upgrade" },
                "hydroPlantTurbines": { "$ref": "#/$defs/workshop-upgrade" },
                "internet": { "$ref": "#/$defs/workshop-upgrade" },
                "invisibleBlackHand": { "$ref": "#/$defs/workshop-upgrade" },
                "ironAxes": { "$ref": "#/$defs/workshop-upgrade" },
                "ironHoes": { "$ref": "#/$defs/workshop-upgrade" },
                "ironwood": { "$ref": "#/$defs/workshop-upgrade" },
                "lhc": { "$ref": "#/$defs/workshop-upgrade" },
                "logistics": { "$ref": "#/$defs/workshop-upgrade" },
                "longRangeSpaceships": { "$ref": "#/$defs/workshop-upgrade" },
                "machineLearning": { "$ref": "#/$defs/workshop-upgrade" },
                "mineralAxes": { "$ref": "#/$defs/workshop-upgrade" },
                "mineralHoes": { "$ref": "#/$defs/workshop-upgrade" },
                "miningDrill": { "$ref": "#/$defs/workshop-upgrade" },
                "mWReactor": { "$ref": "#/$defs/workshop-upgrade" },
                "nanosuits": { "$ref": "#/$defs/workshop-upgrade" },
                "neuralNetworks": { "$ref": "#/$defs/workshop-upgrade" },
                "nuclearPlants": { "$ref": "#/$defs/workshop-upgrade" },
                "nuclearSmelters": { "$ref": "#/$defs/workshop-upgrade" },
                "offsetPress": { "$ref": "#/$defs/workshop-upgrade" },
                "oilDistillation": { "$ref": "#/$defs/workshop-upgrade" },
                "oilRefinery": { "$ref": "#/$defs/workshop-upgrade" },
                "orbitalGeodesy": { "$ref": "#/$defs/workshop-upgrade" },
                "oxidation": { "$ref": "#/$defs/workshop-upgrade" },
                "photolithography": { "$ref": "#/$defs/workshop-upgrade" },
                "photovoltaic": { "$ref": "#/$defs/workshop-upgrade" },
                "pneumaticPress": { "$ref": "#/$defs/workshop-upgrade" },
                "printingPress": { "$ref": "#/$defs/workshop-upgrade" },
                "pumpjack": { "$ref": "#/$defs/workshop-upgrade" },
                "pyrolysis": { "$ref": "#/$defs/workshop-upgrade" },
                "qdot": { "$ref": "#/$defs/workshop-upgrade" },
                "railgun": { "$ref": "#/$defs/workshop-upgrade" },
                "reactorVessel": { "$ref": "#/$defs/workshop-upgrade" },
                "refrigeration": { "$ref": "#/$defs/workshop-upgrade" },
                "register": { "$ref": "#/$defs/workshop-upgrade" },
                "reinforcedBarns": { "$ref": "#/$defs/workshop-upgrade" },
                "reinforcedSaw": { "$ref": "#/$defs/workshop-upgrade" },
                "reinforcedWarehouses": { "$ref": "#/$defs/workshop-upgrade" },
                "relicStation": { "$ref": "#/$defs/workshop-upgrade" },
                "rotaryKiln": { "$ref": "#/$defs/workshop-upgrade" },
                "satelliteRadio": { "$ref": "#/$defs/workshop-upgrade" },
                "satnav": { "$ref": "#/$defs/workshop-upgrade" },
                "seti": { "$ref": "#/$defs/workshop-upgrade" },
                "silos": { "$ref": "#/$defs/workshop-upgrade" },
                "solarSatellites": { "$ref": "#/$defs/workshop-upgrade" },
                "spaceEngineers": { "$ref": "#/$defs/workshop-upgrade" },
                "spaceManufacturing": { "$ref": "#/$defs/workshop-upgrade" },
                "spiceNavigation": { "$ref": "#/$defs/workshop-upgrade" },
                "starlink": { "$ref": "#/$defs/workshop-upgrade" },
                "stasisChambers": { "$ref": "#/$defs/workshop-upgrade" },
                "steelArmor": { "$ref": "#/$defs/workshop-upgrade" },
                "steelAxe": { "$ref": "#/$defs/workshop-upgrade" },
                "steelPlants": { "$ref": "#/$defs/workshop-upgrade" },
                "steelSaw": { "$ref": "#/$defs/workshop-upgrade" },
                "stoneBarns": { "$ref": "#/$defs/workshop-upgrade" },
                "storageBunkers": { "$ref": "#/$defs/workshop-upgrade" },
                "strenghtenBuild": { "$ref": "#/$defs/workshop-upgrade" },
                "tachyonAccelerators": { "$ref": "#/$defs/workshop-upgrade" },
                "thinFilm": { "$ref": "#/$defs/workshop-upgrade" },
                "thoriumEngine": { "$ref": "#/$defs/workshop-upgrade" },
                "thoriumReactors": { "$ref": "#/$defs/workshop-upgrade" },
                "titaniumAxe": { "$ref": "#/$defs/workshop-upgrade" },
                "titaniumBarns": { "$ref": "#/$defs/workshop-upgrade" },
                "titaniumMirrors": { "$ref": "#/$defs/workshop-upgrade" },
                "titaniumSaw": { "$ref": "#/$defs/workshop-upgrade" },
                "titaniumWarehouses": { "$ref": "#/$defs/workshop-upgrade" },
                "turnSmoothly": { "$ref": "#/$defs/workshop-upgrade" },
                "unicornSelection": { "$ref": "#/$defs/workshop-upgrade" },
                "unobtainiumAxe": { "$ref": "#/$defs/workshop-upgrade" },
                "unobtainiumDrill": { "$ref": "#/$defs/workshop-upgrade" },
                "unobtainiumHuts": { "$ref": "#/$defs/workshop-upgrade" },
                "unobtainiumReflectors": { "$ref": "#/$defs/workshop-upgrade" },
                "unobtainiumSaw": { "$ref": "#/$defs/workshop-upgrade" },
                "uplink": { "$ref": "#/$defs/workshop-upgrade" },
                "voidAspiration": { "$ref": "#/$defs/workshop-upgrade" },
                "voidEnergy": { "$ref": "#/$defs/workshop-upgrade" },
                "voidReactors": { "$ref": "#/$defs/workshop-upgrade" }
              },
              "required": [
                "advancedAutomation",
                "advancedRefinement",
                "aiBases",
                "aiEngineers",
                "alloyArmor",
                "alloyAxe",
                "alloyBarns",
                "alloySaw",
                "alloyWarehouses",
                "amBases",
                "amDrive",
                "amFission",
                "amReactors",
                "amReactorsMK2",
                "assistance",
                "astrolabe",
                "astrophysicists",
                "augumentation",
                "automatedPlants",
                "barges",
                "biofuel",
                "bolas",
                "cadSystems",
                "caravanserai",
                "carbonSequestration",
                "cargoShips",
                "celestialMechanics",
                "chronoEngineers",
                "chronoforge",
                "coalFurnace",
                "coldFusion",
                "combustionEngine",
                "compositeBow",
                "concreteBarns",
                "concreteHuts",
                "concreteWarehouses",
                "crossbow",
                "cryocomputing",
                "darkEnergy",
                "deepMining",
                "distorsion",
                "electrolyticSmelting",
                "eludiumCracker",
                "eludiumHuts",
                "eludiumReflectors",
                "energyRifts",
                "enrichedThorium",
                "enrichedUranium",
                "factoryAutomation",
                "factoryLogistics",
                "factoryOptimization",
                "factoryProcessing",
                "factoryRobotics",
                "fluidizedReactors",
                "fluxCondensator",
                "fuelInjectors",
                "geodesy",
                "gmo",
                "goldOre",
                "hubbleTelescope",
                "huntingArmor",
                "hydroPlantTurbines",
                "internet",
                "invisibleBlackHand",
                "ironAxes",
                "ironHoes",
                "ironwood",
                "lhc",
                "logistics",
                "longRangeSpaceships",
                "machineLearning",
                "mineralAxes",
                "mineralHoes",
                "miningDrill",
                "mWReactor",
                "nanosuits",
                "neuralNetworks",
                "nuclearPlants",
                "nuclearSmelters",
                "offsetPress",
                "oilDistillation",
                "oilRefinery",
                "orbitalGeodesy",
                "oxidation",
                "photolithography",
                "photovoltaic",
                "pneumaticPress",
                "printingPress",
                "pumpjack",
                "pyrolysis",
                "qdot",
                "railgun",
                "reactorVessel",
                "refrigeration",
                "register",
                "reinforcedBarns",
                "reinforcedSaw",
                "reinforcedWarehouses",
                "relicStation",
                "rotaryKiln",
                "satelliteRadio",
                "satnav",
                "seti",
                "silos",
                "solarSatellites",
                "spaceEngineers",
                "spaceManufacturing",
                "spiceNavigation",
                "starlink",
                "stasisChambers",
                "steelArmor",
                "steelAxe",
                "steelPlants",
                "steelSaw",
                "stoneBarns",
                "storageBunkers",
                "strenghtenBuild",
                "tachyonAccelerators",
                "thinFilm",
                "thoriumEngine",
                "thoriumReactors",
                "titaniumAxe",
                "titaniumBarns",
                "titaniumMirrors",
                "titaniumSaw",
                "titaniumWarehouses",
                "turnSmoothly",
                "unicornSelection",
                "unobtainiumAxe",
                "unobtainiumDrill",
                "unobtainiumHuts",
                "unobtainiumReflectors",
                "unobtainiumSaw",
                "uplink",
                "voidAspiration",
                "voidEnergy",
                "voidReactors"
              ],
              "type": "object"
            }
          },
          "required": ["enabled", "upgrades"],
          "type": "object"
        }
      },
      "required": ["enabled", "trigger", "resources", "shipOverride", "unlockUpgrades"],
      "type": "object"
    }
  },
  "required": [
    "$schema",
    "v",
    "engine",
    "bonfire",
    "religion",
    "science",
    "space",
    "timeControl",
    "time",
    "trade",
    "village",
    "workshop"
  ],
  "type": "object"
}
